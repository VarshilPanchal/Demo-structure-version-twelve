var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.655,1,1.194]],["body/components/AppComponent.html",[0,1.078,1,2.089,2,2.047,3,0.299,4,0.259,5,1.826,6,1.826,7,1.826,8,1.826,9,0.221,10,3.083,11,1.826,12,3.185,13,2.713,14,2.214,15,2.403,16,5.393,17,2.403,18,4.825,19,0.621,20,2.869,21,3.967,22,1.072,23,0.028,24,1.683,25,1.683,26,1.556,27,3.55,28,4.825,29,4.056,30,4.825,31,0.676,32,3.667,33,0.339,34,0.382,35,0.299,36,0.221,37,3.172,38,1.826,39,2.403,40,2.403,41,1.826,42,2.853,43,1.826,44,1.043,45,1.826,46,1.242,47,1.826,48,1.242,49,1.826,50,1.242,51,1.826,52,1.242,53,1.826,54,1.242,55,1.826,56,1.242,57,1.683,58,1.826,59,1.826,60,0.02,61,0.02]],["title/modules/AppModule.html",[62,1.503,63,2.153]],["body/modules/AppModule.html",[1,2.32,3,0.25,4,0.217,9,0.185,13,1.303,23,0.029,33,0.594,34,0.32,35,0.25,36,0.185,37,2.019,60,0.018,61,0.018,63,4.307,64,1.12,65,2.131,66,2.582,67,2.582,68,2.582,69,2.582,70,2.582,71,3.449,72,2.888,73,2.661,74,3.147,75,3.449,76,2.545,77,1.827,78,1.667,79,3.072,80,2.813,81,4.28,82,1.964,83,3.598,84,4.28,85,4.28,86,1.827,87,4.28,88,4.28,89,2.26,90,1.964,91,4.925,92,3.598,93,2.26,94,4.28,95,3.072,96,4.28,97,2.813,98,3.072,99,2.26,100,3.072,101,3.072,102,3.072,103,2.26,104,3.072,105,3.072,106,2.019,107,3.072,108,3.072,109,4.28,110,4.28,111,3.072,112,1.667]],["title/modules/AppRoutingModule.html",[62,1.503,71,1.948]],["body/modules/AppRoutingModule.html",[3,0.326,4,0.283,9,0.242,21,2.949,23,0.029,33,0.473,34,0.417,35,0.326,36,0.242,60,0.022,61,0.022,64,1.461,71,3.039,82,1.839,90,2.345,113,4.008,114,4.008,115,3.359,116,2.802,117,1.7,118,1.575,119,3.641,120,4.008,121,4.008,122,5.111,123,4.731,124,2.634,125,5.627,126,4.008,127,4.008,128,2.949,129,4.008,130,4.008,131,3.359,132,4.008,133,4.008,134,4.008,135,2.634]],["title/components/AuthComponent.html",[0,0.655,46,1.109]],["body/components/AuthComponent.html",[0,1.073,1,1.326,2,2.036,3,0.296,4,0.257,5,1.812,6,1.812,7,1.812,8,1.812,9,0.219,11,1.812,12,3.18,13,2.709,15,2.39,17,2.39,19,0.616,23,0.028,31,0.884,33,0.337,34,0.379,35,0.296,36,0.219,38,1.812,39,2.39,40,2.39,41,1.812,42,2.844,43,1.812,44,1.038,45,1.812,46,1.934,47,1.812,48,1.232,49,1.812,50,1.232,51,1.812,52,1.232,53,1.812,54,1.232,55,1.812,56,1.232,57,1.67,58,1.812,59,1.812,60,0.02,61,0.02,123,4.802,136,3.059,137,2.036,138,2.915,139,5.372,140,4.8,141,1.303,142,3.099,143,1.458,144,3.638,145,3.638,146,0.988,147,1.232,148,2.604]],["title/guards/AuthGuard.html",[149,2.41,150,2.41]],["body/guards/AuthGuard.html",[3,0.305,4,0.265,9,0.226,19,0.635,22,1.43,23,0.029,31,0.902,33,0.504,34,0.39,35,0.305,36,0.226,44,1.058,60,0.021,61,0.021,73,2.874,106,2.463,112,2.033,117,1.589,137,1.589,141,1.328,143,1.328,146,1.017,150,3.6,151,3.747,152,3.15,153,5.778,154,3.747,155,4.041,156,3.747,157,1.784,158,1.784,159,4.894,160,5.778,161,5.45,162,5.778,163,3.747,164,3.15,165,2.228,166,0.978,167,3.747,168,2.437,169,3.747,170,2.246,171,3.747,172,3.747,173,2.757,174,2.757,175,3.747,176,3.747,177,3.747,178,3.747,179,2.757]],["title/modules/AuthModule.html",[62,1.503,180,2.153]],["body/modules/AuthModule.html",[3,0.316,4,0.274,9,0.234,23,0.029,33,0.575,34,0.404,35,0.316,36,0.234,46,2.102,52,2.102,56,2.102,60,0.021,61,0.021,64,1.416,65,2.494,76,2.979,77,2.31,78,2.107,80,3.292,82,2.298,86,2.31,90,2.298,180,4.34,181,3.265,182,3.265,183,3.265,184,3.692,185,3.884,186,3.685,187,3.265,188,3.884,189,3.265,190,3.265]],["title/modules/AuthRoutingModule.html",[62,1.503,184,1.948]],["body/modules/AuthRoutingModule.html",[0,1.145,3,0.339,4,0.294,9,0.251,23,0.029,33,0.573,34,0.434,35,0.426,36,0.251,46,1.773,52,1.773,56,1.773,57,1.911,60,0.022,61,0.022,64,1.518,82,1.911,90,2.403,115,3.442,116,2.608,117,1.767,118,1.637,119,3.407,135,2.738,173,3.064,184,3.114,187,3.501,189,3.501,190,3.501,191,4.165,192,4.165,193,3.501,194,4.165]],["title/injectables/AuthService.html",[166,0.655,195,2.41]],["body/injectables/AuthService.html",[3,0.326,4,0.283,9,0.242,14,1.839,22,1.171,23,0.029,31,0.738,33,0.567,34,0.417,35,0.326,36,0.242,44,0.867,60,0.022,61,0.022,72,3.117,73,2.72,103,2.949,106,2.634,117,1.7,143,1.387,155,4.181,157,1.461,158,1.461,166,1.021,168,2.951,195,3.76,196,1.7,197,4.297,198,3.369,199,3.369,200,4.731,201,3.168,202,4.008,203,2.949,204,2.634,205,2.383,206,1.996]],["title/classes/CommonUtil.html",[36,0.197,207,2.41]],["body/classes/CommonUtil.html",[2,1.15,3,0.221,4,0.192,9,0.163,19,0.459,22,1.144,23,0.029,24,2.881,31,1.057,33,0.251,35,0.221,36,0.163,44,1.204,60,0.017,61,0.017,118,2.467,141,1.063,146,1.558,147,1.326,157,1.947,158,1.947,164,3.865,170,2.451,207,2.881,208,1.994,209,2.278,210,5.508,211,3.916,212,3.916,213,3.916,214,5.035,215,5.035,216,3.916,217,3.916,218,3.916,219,4.597,220,2.71,221,2.71,222,3.916,223,3.865,224,2.71,225,3.916,226,4.597,227,2.71,228,2.71,229,2.71,230,2.71,231,3.916,232,2.71,233,3.995,234,3.916,235,2.71,236,1.612,237,1.994,238,3.865,239,4.597,240,4.597,241,4.597,242,4.597,243,4.597,244,2.71,245,3.916,246,2.71,247,2.71,248,2.71,249,2.71,250,2.71,251,2.71,252,3.916,253,3.916,254,2.278,255,2.71,256,2.71,257,2.71,258,3.916,259,2.71,260,1.994,261,2.71]],["title/classes/CustomValidator.html",[36,0.197,262,2.41]],["body/classes/CustomValidator.html",[3,0.129,4,0.112,9,0.095,19,0.268,22,1.439,23,0.029,24,1.912,26,0.671,31,0.938,33,0.303,35,0.129,36,0.095,44,1.064,60,0.011,61,0.011,112,2.97,118,1.757,141,0.701,146,1.383,147,0.874,148,0.858,157,1.795,158,1.795,165,1.536,170,2.759,208,1.163,210,5.296,262,1.9,263,1.329,264,2.583,265,2.583,266,3.781,267,2.583,268,2.583,269,2.583,270,2.583,271,2.583,272,3.275,273,2.583,274,6.163,275,1.581,276,4.923,277,4.141,278,2.583,279,1.581,280,1.581,281,3.275,282,2.583,283,4.168,284,1.581,285,1.581,286,2.583,287,1.581,288,2.583,289,1.581,290,2.583,291,1.581,292,3.275,293,2.583,294,1.581,295,2.583,296,1.581,297,2.583,298,1.329,299,1.163,300,1.581,301,1.9,302,1.9,303,2.782,304,2.583,305,2.583,306,5.094,307,1.329,308,4.454,309,1.581,310,1.581,311,1.581,312,0.725,313,1.581,314,1.581,315,1.581,316,1.039,317,3.275,318,1.581,319,3.275,320,1.581,321,2.583,322,1.581,323,2.171,324,1.581,325,1.329,326,1.581,327,2.583,328,2.583,329,2.171,330,1.581,331,1.581,332,1.581,333,1.581,334,1.581,335,1.581,336,1.581,337,1.581,338,1.581,339,1.581,340,1.581,341,3.781,342,1.581,343,1.581,344,1.581,345,1.581,346,1.581,347,1.581,348,1.581,349,1.581,350,1.581,351,1.581,352,1.581,353,1.581,354,1.581,355,1.581,356,2.583,357,2.583,358,1.581,359,2.583,360,1.581,361,1.581,362,1.581,363,1.581,364,1.581,365,1.581,366,3.275,367,1.581,368,3.275,369,1.581,370,1.581,371,1.329,372,1.581,373,1.581,374,0.858,375,1.581,376,1.581,377,1.581,378,1.581,379,1.581,380,1.581,381,1.581,382,1.581,383,1.581,384,1.581]],["title/components/DemoComponent.html",[0,0.655,48,1.109]],["body/components/DemoComponent.html",[0,0.819,1,0.814,2,1.439,3,0.182,4,0.158,5,1.112,6,1.112,7,1.112,8,1.112,9,0.135,11,1.112,12,2.832,13,2.413,15,1.689,17,1.689,19,0.378,22,0.653,23,0.029,24,1.882,27,3.37,31,0.955,33,0.38,34,0.232,35,0.182,36,0.135,38,1.112,39,1.689,40,1.689,41,1.112,42,2.281,43,1.112,44,1.065,45,1.112,46,0.756,47,1.112,48,1.551,49,1.112,50,0.756,51,1.112,52,0.756,53,1.112,54,0.756,55,1.112,56,0.756,57,1.025,58,1.112,59,1.112,60,0.014,61,0.014,112,2.485,118,1.612,124,3.65,137,1.439,138,2.225,141,0.921,142,2.485,143,0.921,146,1.337,147,1.668,148,1.84,157,0.814,158,0.814,168,1.689,201,2.684,203,1.643,223,3.448,374,2.485,385,1.877,386,4.101,387,3.392,388,4.58,389,4.58,390,4.58,391,4.58,392,2.233,393,3.409,394,2.233,395,2.233,396,2.233,397,2.233,398,2.233,399,2.233,400,2.233,401,2.233,402,2.233,403,2.233,404,4.58,405,4.58,406,2.724,407,4.58,408,3.37,409,4.58,410,3.85,411,4.58,412,4.101,413,3.392,414,3.392,415,4.58,416,3.37,417,3.392,418,3.392,419,3.392,420,2.233,421,1.877,422,3.392,423,3.392,424,2.233,425,1.877,426,2.696,427,3.392,428,3.392,429,3.392,430,3.392,431,3.392,432,3.392,433,2.233,434,2.233,435,2.233,436,1.877]],["title/components/ErrorComponent.html",[0,0.655,50,1.109]],["body/components/ErrorComponent.html",[0,0.934,1,1.018,2,1.697,3,0.227,4,0.197,5,1.39,6,1.39,7,1.39,8,1.39,9,0.168,11,1.39,12,3.002,13,2.558,15,1.992,17,1.992,19,0.678,23,0.029,31,0.737,33,0.259,34,0.291,35,0.227,36,0.168,38,1.39,39,1.992,40,1.992,41,1.39,42,2.542,43,1.39,44,0.865,45,1.39,46,0.945,47,1.39,48,0.945,49,1.39,50,1.728,51,1.39,52,0.945,53,1.39,54,0.945,55,1.39,56,0.945,57,1.281,58,1.39,59,1.39,60,0.017,61,0.017,131,3.073,137,1.697,138,2.536,141,1.086,142,2.77,143,1.269,146,0.758,147,0.945,174,3.439,312,1.836,374,2.171,406,1.661,437,2.347,438,4.675,439,4.001,440,2.792,441,2.792,442,4.001,443,2.792,444,4.001,445,4.001,446,4.001,447,3.363,448,3.363,449,2.792,450,4.001,451,2.792,452,4.675,453,2.792,454,2.792,455,5.404,456,3.363,457,2.792,458,2.347,459,2.347,460,2.792,461,4.001,462,2.792,463,2.792,464,2.792,465,2.792,466,2.792,467,4.001,468,2.792,469,2.347,470,2.792,471,4.001,472,2.792,473,5.105,474,4.001,475,4.675,476,2.792,477,2.792,478,2.792,479,2.792,480,2.054,481,4.675,482,2.792,483,2.792,484,2.792,485,2.792,486,2.792,487,2.792,488,3.363,489,4.001,490,2.792,491,2.792,492,2.792,493,2.792,494,2.792,495,4.001,496,2.792,497,2.792,498,2.792,499,2.792,500,2.792,501,2.792,502,2.792]],["title/modules/ErrorModule.html",[62,1.503,503,2.153]],["body/modules/ErrorModule.html",[3,0.343,4,0.298,9,0.254,23,0.029,33,0.559,34,0.439,35,0.343,36,0.254,50,2.147,60,0.022,61,0.022,64,1.537,65,2.627,76,3.138,77,2.507,78,2.287,80,3.468,82,2.421,86,2.507,90,2.421,186,3.882,503,4.276,504,3.544,505,3.544,506,3.544,507,3.771,508,4.216,509,3.544,510,4.216]],["title/modules/ErrorRoutingModule.html",[62,1.503,507,1.948]],["body/modules/ErrorRoutingModule.html",[0,0.9,3,0.367,4,0.318,9,0.271,23,0.029,33,0.549,34,0.469,35,0.448,36,0.271,50,1.861,60,0.023,61,0.023,64,1.642,82,2.067,90,2.523,115,3.613,116,2.737,117,1.911,118,1.77,119,2.679,135,2.961,507,3.269,509,3.787,511,4.505,512,4.505,513,4.505]],["title/injectables/ErrorService.html",[166,0.655,201,1.631]],["body/injectables/ErrorService.html",[3,0.17,4,0.148,9,0.126,14,0.959,19,0.354,22,1.294,23,0.029,25,1.807,31,0.815,33,0.299,34,0.218,35,0.411,36,0.126,44,0.957,60,0.014,61,0.014,74,2.401,131,1.374,141,0.875,143,0.568,146,1.069,147,1.333,157,1.614,158,1.614,166,0.644,196,0.887,201,1.606,206,1.041,312,0.959,406,1.243,408,2.373,480,1.538,514,1.538,515,3.225,516,3.225,517,3.225,518,2.091,519,2.091,520,3.225,521,3.225,522,5.439,523,2.091,524,5.053,525,3.225,526,2.091,527,3.225,528,3.938,529,2.091,530,3.938,531,2.091,532,4.782,533,1.758,534,1.758,535,1.758,536,1.758,537,1.758,538,1.758,539,1.758,540,1.758,541,1.758,542,1.758,543,1.758,544,1.758,545,1.758,546,1.758,547,1.758,548,1.758,549,1.758,550,1.758,551,1.758,552,1.538,553,1.758,554,1.758,555,1.758,556,1.758,557,1.758,558,1.758,559,1.758,560,1.758,561,1.758,562,1.758,563,1.758,564,2.711,565,2.711,566,1.758,567,2.711,568,1.758,569,2.711,570,1.758,571,2.711,572,1.758,573,2.711,574,2.711,575,1.758,576,2.711,577,1.758,578,2.711,579,1.758,580,2.711,581,1.758,582,2.711,583,1.758,584,2.711,585,1.758,586,2.711,587,1.758,588,2.711,589,1.758,590,2.711,591,1.758,592,2.711,593,1.758,594,2.711,595,1.758,596,1.758,597,2.711,598,1.758,599,2.711,600,1.758,601,2.711,602,1.758,603,2.711,604,1.758,605,2.711,606,1.758,607,2.711,608,1.758,609,1.758,610,2.091,611,3.31,612,5.395,613,2.091,614,6.188,615,5.449,616,2.091,617,2.091,618,2.091,619,2.091,620,2.091,621,2.091,622,2.091,623,2.091,624,2.091,625,2.091,626,2.091,627,2.091,628,2.091,629,2.091,630,2.091,631,3.225,632,2.091,633,5.267,634,2.091,635,2.091,636,2.091,637,2.091,638,2.091,639,2.091,640,2.091,641,2.091,642,2.091,643,2.091,644,2.091,645,2.091,646,1.758,647,1.758]],["title/injectables/HttpService.html",[72,1.631,166,0.655]],["body/injectables/HttpService.html",[3,0.205,4,0.178,9,0.152,14,1.155,19,0.426,22,1.421,23,0.029,24,2.022,25,1.155,31,0.896,33,0.519,34,0.262,35,0.205,36,0.152,44,1.051,60,0.016,61,0.016,72,1.848,89,1.852,118,0.989,124,2.896,141,1.007,143,1.007,146,1.196,147,0.852,157,1.773,158,1.773,166,0.741,168,2.581,170,2.696,196,1.068,201,2.421,204,3.408,206,1.254,233,1.655,236,1.497,237,1.852,374,3.043,406,1.497,410,4.088,611,2.116,612,4.088,615,4.358,648,2.116,649,3.711,650,3.711,651,3.711,652,2.518,653,4.863,654,2.518,655,3.711,656,3.711,657,2.518,658,5.184,659,3.711,660,4.863,661,4.407,662,2.518,663,3.711,664,4.863,665,3.577,666,2.518,667,2.518,668,2.116,669,2.73,670,3.711,671,1.655,672,2.518,673,2.518,674,1.852,675,2.518,676,2.518,677,2.518,678,5.184,679,2.116,680,2.518,681,4.863,682,4.863,683,4.863,684,4.863,685,4.863,686,2.116,687,2.518,688,4.407,689,2.116,690,2.518,691,2.116,692,2.518,693,2.518,694,2.518,695,2.518,696,3.711,697,2.518,698,2.518,699,2.518,700,2.518,701,2.518,702,2.518,703,2.518,704,2.518,705,2.518,706,2.518,707,2.518,708,3.711,709,2.518,710,2.518]],["title/injectables/LoadashService.html",[166,0.655,711,2.41]],["body/injectables/LoadashService.html",[3,0.233,4,0.202,9,0.172,14,1.313,19,0.485,23,0.029,31,1.196,33,0.439,34,0.298,35,0.233,36,0.172,60,0.017,61,0.017,143,1.286,166,0.814,170,2.979,196,1.214,206,1.425,674,2.105,711,2.995,712,2.406,713,4.072,714,5.455,715,5.455,716,5.455,717,5.455,718,5.455,719,5.455,720,5.455,721,5.455,722,5.455,723,5.455,724,5.455,725,5.455,726,5.455,727,5.455,728,5.455,729,5.455,730,2.862,731,2.862,732,2.862,733,2.862,734,2.862,735,2.862,736,2.862,737,2.862,738,2.862,739,2.862,740,2.862,741,2.862,742,2.862,743,2.862,744,2.862,745,2.862,746,2.862,747,2.862,748,2.862,749,2.862,750,2.862,751,2.862,752,2.862,753,2.862,754,2.862,755,2.862,756,2.862,757,2.862,758,2.862,759,2.862,760,2.862,761,2.862,762,2.862,763,2.862,764,4.072]],["title/injectables/LocalStorageService.html",[73,1.503,166,0.655]],["body/injectables/LocalStorageService.html",[3,0.182,4,0.158,9,0.135,19,0.378,22,1.516,23,0.029,24,2.889,26,1.74,31,1.068,33,0.207,34,0.232,35,0.182,36,0.135,44,1.121,60,0.014,61,0.014,73,1.556,118,2.038,141,0.921,146,1.574,147,1.388,157,1.891,158,1.891,165,3.554,166,0.678,170,2.61,196,0.947,205,3.506,316,3.237,552,1.643,668,4.956,765,1.877,766,4.58,767,3.392,768,4.58,769,4.58,770,5.186,771,3.392,772,4.58,773,3.392,774,3.392,775,3.392,776,3.392,777,2.233,778,3.392,779,5.895,780,6.214,781,5.977,782,2.233,783,2.233,784,2.233,785,3.392,786,2.233,787,2.233,788,3.392,789,2.233,790,3.392,791,2.233,792,3.392,793,2.233,794,2.233,795,3.392,796,4.101,797,2.233,798,3.392,799,3.392,800,3.392,801,4.58,802,3.392,803,3.392,804,4.58,805,3.392,806,3.392,807,3.392,808,2.233,809,2.233,810,4.58,811,3.392,812,2.233,813,2.233,814,2.233,815,2.233,816,2.233,817,2.233,818,1.877,819,2.233]],["title/injectables/LocaleChangeService.html",[166,0.655,820,2.41]],["body/injectables/LocaleChangeService.html",[3,0.357,4,0.31,9,0.265,14,2.014,19,0.743,20,3.218,23,0.029,25,2.014,26,1.862,31,0.997,33,0.501,34,0.457,35,0.357,36,0.265,60,0.023,61,0.023,143,1.592,166,1.081,196,1.862,205,3.489,206,2.186,671,2.885,820,3.981,821,4.931,822,3.691,823,5.866,824,4.39,825,3.557,826,5.411,827,4.39,828,4.39]],["title/components/LoginComponent.html",[0,0.655,52,1.109]],["body/components/LoginComponent.html",[0,1.069,1,1.316,2,2.026,3,0.294,4,0.255,5,1.797,6,1.797,7,1.797,8,1.797,9,0.218,11,1.797,12,3.175,13,2.705,15,2.378,17,2.378,19,0.611,23,0.029,31,0.88,33,0.334,34,0.376,35,0.294,36,0.218,38,1.797,39,2.378,40,2.378,41,1.797,42,2.835,43,1.797,44,1.033,45,1.797,46,1.222,47,1.797,48,1.222,49,1.797,50,1.222,51,1.797,52,1.928,53,1.797,54,1.222,55,1.797,56,1.222,57,1.656,58,1.797,59,1.797,60,0.02,61,0.02,137,2.026,138,2.903,141,1.296,142,3.09,143,1.453,146,0.98,147,1.222,148,2.591,168,1.797,173,4.189,829,3.035,830,5.351,831,4.775,832,3.61,833,3.61]],["title/injectables/NotificationService.html",[74,1.777,166,0.655]],["body/injectables/NotificationService.html",[3,0.352,4,0.173,9,0.147,14,1.121,19,0.414,20,2.157,21,4.86,22,1.704,23,0.029,24,3.031,25,2.198,26,2.032,31,1.074,33,0.336,34,0.254,35,0.199,36,0.147,44,1.107,60,0.015,61,0.015,74,1.968,97,1.605,99,3.525,141,0.985,143,0.663,146,1.3,147,1.622,157,1.866,158,1.866,166,0.725,196,1.036,206,1.216,308,3.525,374,2.348,456,4.027,459,4.027,469,4.027,609,2.053,646,3.639,834,2.053,835,4.328,836,4.328,837,4.328,838,4.328,839,4.328,840,2.442,841,4.791,842,3.628,843,3.628,844,2.442,845,4.791,846,3.628,847,2.442,848,3.628,849,2.442,850,3.628,851,2.442,852,5.706,853,4.791,854,2.442,855,2.442,856,2.442,857,2.053,858,2.442,859,2.442,860,2.442,861,2.053,862,2.442,863,2.442,864,4.791,865,4.791,866,2.442,867,2.442,868,2.442,869,2.442]],["title/components/SampleComponent.html",[0,0.655,54,1.109]],["body/components/SampleComponent.html",[0,1.073,1,1.326,2,2.036,3,0.296,4,0.257,5,1.812,6,1.812,7,1.812,8,1.812,9,0.219,11,1.812,12,3.18,13,2.709,15,2.39,17,2.39,19,0.616,23,0.028,31,0.884,33,0.337,34,0.379,35,0.296,36,0.219,38,1.812,39,2.39,40,2.39,41,1.812,42,2.844,43,1.812,44,1.038,45,1.812,46,1.232,47,1.812,48,1.232,49,1.812,50,1.232,51,1.812,52,1.232,53,1.812,54,1.934,55,1.812,56,1.232,57,1.67,58,1.812,59,1.812,60,0.02,61,0.02,128,4.202,137,2.036,138,2.915,141,1.303,142,3.099,143,1.458,146,0.988,147,1.232,148,2.604,870,3.059,871,5.372,872,4.8,873,3.638,874,3.638]],["title/modules/SampleModule.html",[62,1.503,875,2.153]],["body/modules/SampleModule.html",[3,0.328,4,0.285,9,0.243,23,0.029,33,0.568,34,0.42,35,0.328,36,0.243,48,2.122,54,2.122,60,0.022,61,0.022,64,1.47,65,2.554,76,3.051,77,2.397,78,2.187,80,3.372,82,2.354,86,2.397,90,2.354,186,3.774,875,4.312,876,3.389,877,3.389,878,3.389,879,3.728,880,4.031,881,3.389,882,3.389,883,4.031]],["title/modules/SampleRoutingModule.html",[62,1.503,879,1.948]],["body/modules/SampleRoutingModule.html",[0,1.069,3,0.351,4,0.304,9,0.26,23,0.029,27,3.169,33,0.563,34,0.449,35,0.436,36,0.26,48,1.811,54,1.811,60,0.023,61,0.023,64,1.57,82,1.977,90,2.454,115,3.515,116,2.663,117,1.827,118,1.693,119,3.181,135,2.831,193,3.621,879,3.181,881,3.621,882,3.621,884,4.308,885,4.308,886,4.308]],["title/injectables/SampleService.html",[166,0.655,393,2.153]],["body/injectables/SampleService.html",[3,0.2,4,0.173,9,0.148,14,1.126,19,0.416,20,2.166,22,1.626,23,0.029,25,1.126,26,1.041,31,1.053,33,0.498,34,0.256,35,0.2,36,0.148,44,1.203,60,0.015,61,0.015,72,2.676,73,2.204,103,1.806,106,1.614,117,1.041,118,2.186,124,3.533,141,0.989,143,0.989,146,1.393,155,3.657,157,1.87,158,1.87,166,0.728,168,2.392,170,2.466,196,1.041,199,2.064,200,3.65,201,2.77,203,1.806,204,1.614,205,1.46,206,1.222,233,3.372,260,1.806,301,1.806,302,1.806,303,1.806,307,3.062,308,2.679,312,1.671,316,1.614,393,2.394,416,2.679,421,4.313,426,2.394,488,3.062,665,1.806,669,1.806,679,2.064,686,2.064,689,2.064,691,2.064,825,1.614,887,4.907,888,2.064,889,4.342,890,4.342,891,3.642,892,3.642,893,4.803,894,3.642,895,3.642,896,3.642,897,3.642,898,2.455,899,3.642,900,3.642,901,2.455,902,2.455,903,3.642,904,2.455,905,3.642,906,2.455,907,2.064,908,3.642,909,3.642,910,3.642,911,3.642,912,2.455,913,4.803,914,2.455,915,3.642,916,2.455,917,2.455,918,2.455,919,3.642,920,2.455,921,4.803,922,2.455,923,2.455,924,2.455]],["title/components/SignupComponent.html",[0,0.655,56,1.109]],["body/components/SignupComponent.html",[0,1.073,1,1.326,2,2.036,3,0.296,4,0.257,5,1.812,6,1.812,7,1.812,8,1.812,9,0.219,11,1.812,12,3.18,13,2.709,15,2.39,17,2.39,19,0.616,23,0.028,31,0.884,33,0.337,34,0.379,35,0.296,36,0.219,38,1.812,39,2.39,40,2.39,41,1.812,42,2.844,43,1.812,44,1.038,45,1.812,46,1.232,47,1.812,48,1.232,49,1.812,50,1.232,51,1.812,52,1.232,53,1.812,54,1.232,55,1.812,56,1.934,57,2.725,58,1.812,59,1.812,60,0.02,61,0.02,137,2.036,138,2.915,141,1.303,142,3.099,143,1.458,146,0.988,147,1.232,148,2.604,925,3.059,926,5.372,927,4.8,928,3.638,929,3.638]],["title/interfaces/ValidationResult.html",[277,2.153,930,2.153]],["body/interfaces/ValidationResult.html",[3,0.401,4,0.348,9,0.297,23,0.027,24,2.66,31,0.907,35,0.401,60,0.025,61,0.025,165,3.448,277,3.811,316,3.811,930,3.235,931,4.922,932,4.138,933,4.922,934,4.922]],["title/coverage.html",[935,3.761]],["body/coverage.html",[0,1.202,1,1.167,9,0.193,10,2.69,22,0.935,23,0.029,36,0.265,46,1.083,48,1.083,50,1.083,52,1.083,54,1.083,56,1.083,60,0.019,61,0.019,72,1.593,73,1.468,74,1.736,75,1.903,136,2.69,149,2.354,150,2.354,152,2.69,166,1.225,195,2.354,197,2.69,198,2.69,201,1.593,204,2.103,205,2.618,207,2.354,209,2.69,236,2.618,262,2.354,263,2.69,277,2.103,299,2.354,312,3.093,385,2.69,393,2.103,437,2.69,514,2.354,648,2.69,711,2.354,712,2.69,765,2.69,820,2.354,821,2.69,822,2.69,825,2.103,829,2.69,834,2.69,870,2.69,887,2.69,888,2.69,925,2.69,930,2.103,932,2.69,935,2.69,936,3.2,937,3.2,938,3.2,939,5.033,940,2.69,941,5.874,942,2.69,943,6.017,944,2.69,945,2.69,946,2.69,947,2.69,948,2.69,949,6.017,950,4.402,951,2.69,952,2.69,953,4.402,954,3.2,955,4.402,956,3.2,957,3.2,958,2.69,959,2.69,960,3.2,961,3.2]],["title/dependencies.html",[65,1.962,962,2.299]],["body/dependencies.html",[23,0.029,34,0.462,37,2.913,60,0.023,61,0.023,65,2.207,83,3.726,86,2.636,92,4.576,93,4.005,97,3.578,99,3.261,117,1.88,298,3.726,671,2.913,963,4.432,964,6.567,965,4.432,966,4.432,967,4.432,968,4.432,969,4.432,970,4.432,971,4.432,972,4.432,973,4.432,974,4.432,975,4.432,976,4.432]],["title/miscellaneous/enumerations.html",[977,1.797,978,3.313]],["body/miscellaneous/enumerations.html",[19,0.516,23,0.029,26,2.902,60,0.018,61,0.018,131,2.001,312,1.397,406,1.811,408,2.24,425,3.575,436,3.575,480,2.24,514,2.24,533,3.575,534,2.56,535,2.56,536,2.56,537,3.575,538,2.56,539,2.56,540,2.56,541,2.56,542,2.56,543,2.56,544,2.56,545,2.56,546,2.56,547,2.56,548,2.56,549,2.56,550,3.575,551,2.56,552,2.24,553,2.56,554,2.56,555,2.56,556,2.56,557,2.56,558,2.56,559,2.56,560,2.56,561,2.56,562,2.56,563,3.575,564,2.56,565,2.56,566,2.56,567,2.56,568,2.56,569,2.56,570,2.56,571,2.56,572,2.56,573,2.56,574,2.56,575,2.56,576,2.56,577,2.56,578,2.56,579,2.56,580,2.56,581,2.56,582,2.56,583,2.56,584,2.56,585,2.56,586,2.56,587,2.56,588,2.56,589,2.56,590,2.56,591,2.56,592,2.56,593,2.56,594,2.56,595,2.56,596,3.575,597,2.56,598,2.56,599,2.56,600,2.56,601,2.56,602,2.56,603,2.56,604,2.56,605,2.56,606,2.56,607,2.56,608,2.56,665,3.129,977,2.001,978,2.56,979,3.045,980,5.583,981,3.045,982,4.253,983,4.253]],["title/interceptors/httpInterceptor.html",[75,1.948,952,2.754]],["body/interceptors/httpInterceptor.html",[3,0.214,4,0.186,9,0.159,19,0.446,20,2.28,22,1.61,23,0.029,25,2.075,26,1.918,31,1.015,33,0.527,34,0.274,35,0.214,36,0.231,37,2.972,44,1.074,60,0.016,61,0.016,75,2.954,89,1.937,97,1.73,112,1.428,117,1.117,137,1.117,141,1.041,143,1.041,146,1.041,155,3.739,157,1.649,158,1.649,165,2.28,166,0.766,168,1.909,170,2.279,179,1.937,236,1.566,237,1.937,260,3.654,301,1.937,302,3.654,303,1.937,312,2.423,374,1.428,426,2.52,669,3.327,671,1.73,674,1.937,818,3.223,951,2.213,984,2.633,985,4.522,986,4.522,987,4.522,988,3.834,989,3.834,990,2.633,991,4.968,992,2.633,993,3.834,994,4.968,995,4.968,996,2.633,997,2.633,998,3.834,999,2.633,1000,2.633,1001,2.633,1002,2.633,1003,2.633,1004,3.834,1005,3.223,1006,2.633,1007,2.633,1008,3.834,1009,2.633,1010,2.633,1011,2.633,1012,3.834,1013,2.633,1014,4.968,1015,2.633,1016,2.633,1017,2.633,1018,2.633,1019,2.633,1020,3.834,1021,2.633,1022,2.633,1023,2.633]],["title/index.html",[19,0.463,1024,2.734,1025,2.734]],["body/index.html",[0,1.098,4,0.269,13,1.616,23,0.021,29,3.202,44,0.824,60,0.021,61,0.021,78,2.067,137,1.616,174,2.802,254,4.618,371,3.202,447,3.202,647,3.202,825,2.504,857,3.202,861,4.618,962,3.202,1026,3.809,1027,4.946,1028,3.809,1029,5.493,1030,3.809,1031,3.809,1032,4.946,1033,6.026,1034,6.287,1035,3.809,1036,3.809,1037,3.809,1038,3.809,1039,3.809,1040,3.809,1041,3.809,1042,3.809,1043,5.493,1044,3.809,1045,5.814,1046,3.809,1047,3.809,1048,3.809,1049,3.809,1050,4.946,1051,4.946,1052,5.814,1053,3.202,1054,4.946,1055,4.946,1056,3.809,1057,6.176,1058,3.809,1059,3.809,1060,3.809,1061,4.946,1062,3.809,1063,3.809,1064,3.809,1065,3.809,1066,3.809,1067,3.809,1068,5.493,1069,3.809,1070,3.809,1071,2.802]],["title/modules.html",[64,1.631]],["body/modules.html",[23,0.024,60,0.024,61,0.024,63,3.05,64,1.692,71,2.76,93,4.592,180,3.05,184,2.76,503,3.05,507,2.76,875,3.05,879,2.76,1072,6.241,1073,6.241,1074,6.622,1075,6.241,1076,6.241]],["title/overview.html",[1071,3.291]],["body/overview.html",[1,2.238,2,1.466,23,0.028,46,1.773,48,1.773,50,1.773,52,1.773,54,1.773,56,1.773,60,0.02,61,0.02,63,4.334,64,1.26,65,2.31,66,2.906,67,2.906,68,2.906,69,2.906,70,2.906,71,3.114,72,2.607,73,2.403,74,2.841,75,3.114,76,2.759,77,2.055,78,1.875,116,1.721,149,2.543,180,4.198,181,2.906,182,2.906,183,2.906,184,3.114,196,1.466,208,2.543,426,3.049,503,3.95,504,2.906,505,2.906,506,2.906,507,3.114,875,4.102,876,2.906,877,2.906,878,2.906,879,3.114,930,2.272,1071,2.543,1077,4.639,1078,3.456,1079,2.906,1080,3.456]],["title/routes.html",[116,2.227]],["body/routes.html",[23,0.026,60,0.026,61,0.026,116,2.629]],["title/miscellaneous/variables.html",[977,1.797,1081,3.313]],["body/miscellaneous/variables.html",[9,0.224,19,0.426,22,1.585,23,0.029,25,2.489,26,2.301,60,0.016,61,0.016,112,1.366,119,1.497,128,2.73,179,1.852,233,1.655,236,2.892,238,2.116,299,2.73,312,2.842,323,4.358,325,4.088,329,3.119,416,1.852,448,3.119,458,3.704,907,4.56,940,2.116,942,3.119,944,2.116,945,2.116,946,3.119,947,2.116,948,3.119,958,2.116,959,2.116,977,1.655,1005,2.116,1053,2.116,1079,2.116,1081,2.116,1082,2.518,1083,2.518,1084,2.518,1085,2.518,1086,2.518,1087,2.518,1088,2.518,1089,2.518,1090,2.518,1091,5.756,1092,3.711,1093,2.518,1094,3.711,1095,2.518,1096,4.407,1097,2.518,1098,2.518,1099,2.518,1100,2.518,1101,2.518,1102,2.518,1103,3.711,1104,3.711,1105,3.711,1106,3.711,1107,2.518,1108,3.711,1109,5.876,1110,2.518,1111,2.518,1112,2.518,1113,2.518,1114,2.518,1115,2.518,1116,2.518,1117,3.711,1118,3.711,1119,2.518,1120,2.518,1121,2.518,1122,2.518,1123,2.518,1124,2.518,1125,2.518,1126,2.518,1127,2.518,1128,2.518,1129,2.518,1130,5.184,1131,3.711,1132,3.711,1133,2.518,1134,2.518,1135,2.518,1136,2.518,1137,2.518,1138,2.518,1139,2.518,1140,2.518,1141,2.518,1142,2.518,1143,2.518,1144,2.518,1145,2.518,1146,2.518,1147,2.518,1148,2.518,1149,2.518,1150,2.518,1151,2.518,1152,2.518,1153,2.518,1154,3.711,1155,3.711,1156,2.518,1157,2.518,1158,2.518,1159,2.518,1160,2.518,1161,2.518,1162,2.518,1163,2.518,1164,2.518,1165,2.518,1166,2.518,1167,2.518,1168,2.518,1169,2.518,1170,2.518,1171,2.518,1172,2.518,1173,2.518,1174,2.518,1175,2.518,1176,2.518,1177,2.518,1178,3.711,1179,2.518,1180,2.518,1181,3.711,1182,2.518,1183,2.518,1184,2.518,1185,2.518,1186,2.518,1187,2.518,1188,3.711,1189,2.518,1190,2.518,1191,2.518]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interceptors/httpInterceptor.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":312,"title":{},"body":{"classes/CustomValidator.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/SampleService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":466,"title":{},"body":{"components/ErrorComponent.html":{}}}],["0.75rem",{"_index":453,"title":{},"body":{"components/ErrorComponent.html":{}}}],["0/1",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["08t04:25:40.000+00:00",{"_index":427,"title":{},"body":{"components/DemoComponent.html":{}}}],["08t09:53:34.718z",{"_index":417,"title":{},"body":{"components/DemoComponent.html":{}}}],["1",{"_index":426,"title":{},"body":{"components/DemoComponent.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{},"overview.html":{}}}],["1.25rem",{"_index":454,"title":{},"body":{"components/ErrorComponent.html":{}}}],["10",{"_index":416,"title":{},"body":{"components/DemoComponent.html":{},"injectables/SampleService.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":480,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["1000",{"_index":1021,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["101",{"_index":536,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["10px",{"_index":494,"title":{},"body":{"components/ErrorComponent.html":{}}}],["11",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["111",{"_index":1133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1111)(?!222",{"_index":1134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1111111)(?!22",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.0.0",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["12.2.8",{"_index":1030,"title":{},"body":{"index.html":{}}}],["14.1.3",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":1080,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":462,"title":{},"body":{"components/ErrorComponent.html":{}}}],["1rem",{"_index":460,"title":{},"body":{"components/ErrorComponent.html":{}}}],["1}91){1}[1",{"_index":1157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":1079,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2,4",{"_index":1114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2,4})?$/i",{"_index":331,"title":{},"body":{"classes/CustomValidator.html":{}}}],["2.3.0",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":349,"title":{},"body":{"classes/CustomValidator.html":{}}}],["200",{"_index":406,"title":{},"body":{"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["2000",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["201",{"_index":598,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["202",{"_index":600,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["2021",{"_index":415,"title":{},"body":{"components/DemoComponent.html":{}}}],["203",{"_index":602,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["204",{"_index":604,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["205",{"_index":606,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["206",{"_index":608,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["20px",{"_index":495,"title":{},"body":{"components/ErrorComponent.html":{}}}],["22",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2222)(?!333",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2222222)(?!33",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":457,"title":{},"body":{"components/ErrorComponent.html":{}}}],["3.6.0",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":539,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["301",{"_index":541,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["302",{"_index":543,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["303",{"_index":545,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["304",{"_index":547,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["305",{"_index":549,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["33",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3333)(?!444",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3333333)(?!44",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3456789)(?!00",{"_index":1128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":468,"title":{},"body":{"components/ErrorComponent.html":{}}}],["39ac31",{"_index":496,"title":{},"body":{"components/ErrorComponent.html":{}}}],["4",{"_index":695,"title":{},"body":{"injectables/HttpService.html":{}}}],["400",{"_index":566,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["400px",{"_index":485,"title":{},"body":{"components/ErrorComponent.html":{}}}],["401",{"_index":568,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["402",{"_index":570,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["403",{"_index":572,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["404",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["405",{"_index":575,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["406",{"_index":577,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["407",{"_index":579,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["408",{"_index":581,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["409",{"_index":583,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["40px",{"_index":472,"title":{},"body":{"components/ErrorComponent.html":{}}}],["410",{"_index":585,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["411",{"_index":587,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["412",{"_index":589,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["413",{"_index":591,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["414",{"_index":593,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["415",{"_index":595,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["43200000",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4444)(?!555",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4444444)(?!55",{"_index":1122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4888",{"_index":430,"title":{},"body":{"components/DemoComponent.html":{}}}],["4f9e",{"_index":429,"title":{},"body":{"components/DemoComponent.html":{}}}],["5.1.3",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":552,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["501",{"_index":554,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["502",{"_index":556,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["503",{"_index":558,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["504",{"_index":560,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["505",{"_index":562,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["50px",{"_index":501,"title":{},"body":{"components/ErrorComponent.html":{}}}],["53fa19046350",{"_index":432,"title":{},"body":{"components/DemoComponent.html":{}}}],["55",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5555)(?!666",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5555555)(?!66",{"_index":1123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":348,"title":{},"body":{"classes/CustomValidator.html":{}}}],["6.6.0",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65",{"_index":470,"title":{},"body":{"components/ErrorComponent.html":{}}}],["66",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6666)(?!777",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6666666)(?!77",{"_index":1124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6789)(?!000",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":1078,"title":{},"body":{"overview.html":{}}}],["7200000",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7777)(?!888",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7777777)(?!88",{"_index":1125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1077,"title":{},"body":{"overview.html":{}}}],["80px",{"_index":489,"title":{},"body":{"components/ErrorComponent.html":{}}}],["88",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8888)(?!999",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8888888)(?!99",{"_index":1126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8addea44",{"_index":428,"title":{},"body":{"components/DemoComponent.html":{}}}],["9",{"_index":325,"title":{},"body":{"classes/CustomValidator.html":{},"miscellaneous/variables.html":{}}}],["9._",{"_index":324,"title":{},"body":{"classes/CustomValidator.html":{}}}],["99",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9999)(?!123",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9999999)(?!12",{"_index":1127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])(?=.*[a",{"_index":1104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]*$/i",{"_index":313,"title":{},"body":{"classes/CustomValidator.html":{}}}],["9]+)*(.[a",{"_index":1110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1}[0",{"_index":1158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{2",{"_index":1130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{3",{"_index":1154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{4",{"_index":1155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{4})([0",{"_index":1153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{7",{"_index":1131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{7})([0",{"_index":1129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{9",{"_index":1159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_a",{"_index":1108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_blank",{"_index":258,"title":{},"body":{"classes/CommonUtil.html":{}}}],["absolute",{"_index":451,"title":{},"body":{"components/ErrorComponent.html":{}}}],["abstractcontrol",{"_index":297,"title":{},"body":{"classes/CustomValidator.html":{}}}],["accepted",{"_index":599,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["accessors",{"_index":713,"title":{},"body":{"injectables/LoadashService.html":{}}}],["activatedroutesnapshot",{"_index":160,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["add",{"_index":1064,"title":{},"body":{"index.html":{}}}],["alert",{"_index":449,"title":{},"body":{"components/ErrorComponent.html":{}}}],["alert('unknown",{"_index":645,"title":{},"body":{"injectables/ErrorService.html":{}}}],["always",{"_index":381,"title":{},"body":{"classes/CustomValidator.html":{}}}],["angular",{"_index":861,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["angular/animations",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpService.html":{},"interceptors/httpInterceptor.html":{}}}],["angular/compiler",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"dependencies.html":{},"interceptors/httpInterceptor.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"classes/CustomValidator.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":117,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"dependencies.html":{},"interceptors/httpInterceptor.html":{}}}],["any).controls",{"_index":363,"title":{},"body":{"classes/CustomValidator.html":{}}}],["api",{"_index":667,"title":{},"body":{"injectables/HttpService.html":{}}}],["api_constants",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpoint",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apimethodname",{"_index":665,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SampleService.html":{},"miscellaneous/enumerations.html":{}}}],["apimethodname.delete",{"_index":691,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SampleService.html":{}}}],["apimethodname.get",{"_index":679,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SampleService.html":{}}}],["apimethodname.post",{"_index":686,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SampleService.html":{}}}],["apimethodname.put",{"_index":689,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SampleService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"index.html":{}}}],["app.component",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":71,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1046,"title":{},"body":{"index.html":{}}}],["arvo",{"_index":477,"title":{},"body":{"components/ErrorComponent.html":{}}}],["assets/sample",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{}}}],["auth'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["auth.authmodule",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth.component",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["auth.component.css",{"_index":139,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":140,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.routing",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth_routes",{"_index":192,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["authcomponent",{"_index":46,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":150,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["authmodule",{"_index":180,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authroutingmodule",{"_index":184,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":195,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["autologout",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autologoutimmediate",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1039,"title":{},"body":{"index.html":{}}}],["avaible",{"_index":446,"title":{},"body":{"components/ErrorComponent.html":{}}}],["available",{"_index":1076,"title":{},"body":{"modules.html":{}}}],["await",{"_index":684,"title":{},"body":{"injectables/HttpService.html":{}}}],["b629",{"_index":431,"title":{},"body":{"components/DemoComponent.html":{}}}],["b[a",{"_index":322,"title":{},"body":{"classes/CustomValidator.html":{}}}],["background",{"_index":473,"title":{},"body":{"components/ErrorComponent.html":{}}}],["bad_gateway",{"_index":555,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["bad_request",{"_index":565,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["baseurl",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviorsubject",{"_index":828,"title":{},"body":{"injectables/LocaleChangeService.html":{}}}],["behaviorsubject('en",{"_index":826,"title":{},"body":{"injectables/LocaleChangeService.html":{}}}],["bellnotificationinterval",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":347,"title":{},"body":{"classes/CustomValidator.html":{}}}],["block",{"_index":499,"title":{},"body":{"components/ErrorComponent.html":{}}}],["blockspecial",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blockspecialforexperience",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":165,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CustomValidator.html":{},"injectables/LocalStorageService.html":{},"interfaces/ValidationResult.html":{},"interceptors/httpInterceptor.html":{}}}],["bootstrap",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":461,"title":{},"body":{"components/ErrorComponent.html":{}}}],["bottom",{"_index":459,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/NotificationService.html":{}}}],["bottomleft",{"_index":835,"title":{},"body":{"injectables/NotificationService.html":{}}}],["bottomright",{"_index":836,"title":{},"body":{"injectables/NotificationService.html":{}}}],["break",{"_index":615,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/HttpService.html":{}}}],["browse",{"_index":1074,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1045,"title":{},"body":{"index.html":{}}}],["c",{"_index":292,"title":{},"body":{"classes/CustomValidator.html":{}}}],["c.get('confirmpassword",{"_index":355,"title":{},"body":{"classes/CustomValidator.html":{}}}],["c.get('confirmpassword').value",{"_index":358,"title":{},"body":{"classes/CustomValidator.html":{}}}],["c.get('password",{"_index":354,"title":{},"body":{"classes/CustomValidator.html":{}}}],["c.get('password').value",{"_index":356,"title":{},"body":{"classes/CustomValidator.html":{}}}],["c.root.get('password').value",{"_index":366,"title":{},"body":{"classes/CustomValidator.html":{}}}],["c.value",{"_index":319,"title":{},"body":{"classes/CustomValidator.html":{}}}],["canactivate",{"_index":153,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":159,"title":{},"body":{"guards/AuthGuard.html":{}}}],["capabilities",{"_index":1066,"title":{},"body":{"index.html":{}}}],["case",{"_index":612,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/HttpService.html":{}}}],["catcherror",{"_index":672,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror(async",{"_index":683,"title":{},"body":{"injectables/HttpService.html":{}}}],["center",{"_index":486,"title":{},"body":{"components/ErrorComponent.html":{}}}],["change",{"_index":371,"title":{},"body":{"classes/CustomValidator.html":{},"index.html":{}}}],["change.service.ts",{"_index":822,"title":{},"body":{"injectables/LocaleChangeService.html":{},"coverage.html":{}}}],["change.service.ts:11",{"_index":827,"title":{},"body":{"injectables/LocaleChangeService.html":{}}}],["change.service.ts:7",{"_index":824,"title":{},"body":{"injectables/LocaleChangeService.html":{}}}],["character",{"_index":350,"title":{},"body":{"classes/CustomValidator.html":{}}}],["charater",{"_index":346,"title":{},"body":{"classes/CustomValidator.html":{}}}],["check",{"_index":1070,"title":{},"body":{"index.html":{}}}],["children",{"_index":193,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/SampleRoutingModule.html":{}}}],["choice",{"_index":1060,"title":{},"body":{"index.html":{}}}],["class",{"_index":36,"title":{"classes/CommonUtil.html":{},"classes/CustomValidator.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"coverage.html":{},"interceptors/httpInterceptor.html":{}}}],["classes",{"_index":208,"title":{},"body":{"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"overview.html":{}}}],["cli",{"_index":1029,"title":{},"body":{"index.html":{}}}],["client_email_regex",{"_index":1112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientemailvalidator",{"_index":264,"title":{},"body":{"classes/CustomValidator.html":{}}}],["clientemailvalidator(control",{"_index":273,"title":{},"body":{"classes/CustomValidator.html":{}}}],["clienterrorcodes",{"_index":563,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["clienterrorcodes.bad_request",{"_index":613,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.conflict",{"_index":624,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.forbidden",{"_index":618,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.gone",{"_index":625,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.length_required",{"_index":626,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.method_not_allowed",{"_index":620,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.not_acceptable",{"_index":621,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.not_found",{"_index":619,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.payment_required",{"_index":617,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.precondition_failed",{"_index":627,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.proxy_authentication_required",{"_index":622,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.request_entity_too_large",{"_index":628,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.request_time_out",{"_index":623,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.request_url_too_large",{"_index":629,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.unauthorized",{"_index":616,"title":{},"body":{"injectables/ErrorService.html":{}}}],["clienterrorcodes.unsupported_media_type",{"_index":630,"title":{},"body":{"injectables/ErrorService.html":{}}}],["cluster_appmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_errormodule",{"_index":504,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_declarations",{"_index":506,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_imports",{"_index":505,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_samplemodule",{"_index":876,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["cluster_samplemodule_declarations",{"_index":877,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["cluster_samplemodule_imports",{"_index":878,"title":{},"body":{"modules/SampleModule.html":{},"overview.html":{}}}],["code",{"_index":647,"title":{},"body":{"injectables/ErrorService.html":{},"index.html":{}}}],["codesss",{"_index":533,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["color",{"_index":492,"title":{},"body":{"components/ErrorComponent.html":{}}}],["command",{"_index":1061,"title":{},"body":{"index.html":{}}}],["common_constants",{"_index":299,"title":{},"body":{"classes/CustomValidator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["common_constants.password_regx",{"_index":339,"title":{},"body":{"classes/CustomValidator.html":{}}}],["common_password_for_admin_add_functionality",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{}}}],["commonutil",{"_index":207,"title":{"classes/CommonUtil.html":{}},"body":{"classes/CommonUtil.html":{},"coverage.html":{}}}],["commonutil.getapiendpointpath",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonutil.openwindow(\"/preview/worker",{"_index":256,"title":{},"body":{"classes/CommonUtil.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorRoutingModule.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"modules/SampleRoutingModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["componentname",{"_index":781,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"classes/CommonUtil.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"overview.html":{}}}],["components/demo/demo.component",{"_index":881,"title":{},"body":{"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{}}}],["components/login/login.component",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/signup/signup.component",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["condition",{"_index":372,"title":{},"body":{"classes/CustomValidator.html":{}}}],["confirmedpassword",{"_index":368,"title":{},"body":{"classes/CustomValidator.html":{}}}],["conflict",{"_index":582,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["console.error('an",{"_index":704,"title":{},"body":{"injectables/HttpService.html":{}}}],["console.error(err",{"_index":411,"title":{},"body":{"components/DemoComponent.html":{}}}],["console.log('error",{"_index":699,"title":{},"body":{"injectables/HttpService.html":{}}}],["console.log(data",{"_index":404,"title":{},"body":{"components/DemoComponent.html":{}}}],["console.log(error",{"_index":1018,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["console.log(event",{"_index":1017,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["console.log(password",{"_index":370,"title":{},"body":{"classes/CustomValidator.html":{}}}],["const",{"_index":118,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"modules/ErrorRoutingModule.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{}}}],["constants/apimethodname",{"_index":675,"title":{},"body":{"injectables/HttpService.html":{}}}],["constants/commonconstants",{"_index":300,"title":{},"body":{"classes/CustomValidator.html":{}}}],["constructor",{"_index":143,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interceptors/httpInterceptor.html":{}}}],["constructor(http",{"_index":652,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(httpservice",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SampleService.html":{}}}],["constructor(notification",{"_index":518,"title":{},"body":{"injectables/ErrorService.html":{}}}],["constructor(private",{"_index":609,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/NotificationService.html":{}}}],["constructor(router",{"_index":154,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(sampleservice",{"_index":392,"title":{},"body":{"components/DemoComponent.html":{}}}],["constructor(spinner",{"_index":990,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["constructor(toastr",{"_index":840,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contain",{"_index":340,"title":{},"body":{"classes/CustomValidator.html":{}}}],["contant_box_404",{"_index":500,"title":{},"body":{"components/ErrorComponent.html":{}}}],["content",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content/contenttype?type",{"_index":1099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content_save",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["content_update",{"_index":1100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":276,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.markasdirty",{"_index":362,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.markastouched",{"_index":361,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.value",{"_index":306,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.value.match(password_regexp",{"_index":352,"title":{},"body":{"classes/CustomValidator.html":{}}}],["control.value.trim",{"_index":310,"title":{},"body":{"classes/CustomValidator.html":{}}}],["core/services/http",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/interceptor/httpinterceptor",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/localstorage",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/notification/notification.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["count",{"_index":985,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["countinue",{"_index":534,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["coverage",{"_index":935,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":860,"title":{},"body":{"injectables/NotificationService.html":{}}}],["created",{"_index":597,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["createdby",{"_index":413,"title":{},"body":{"components/DemoComponent.html":{}}}],["createddate",{"_index":414,"title":{},"body":{"components/DemoComponent.html":{}}}],["createexternalurlforjob",{"_index":211,"title":{},"body":{"classes/CommonUtil.html":{}}}],["createexternalurlforjob(jobtitle",{"_index":218,"title":{},"body":{"classes/CommonUtil.html":{}}}],["createexternalurlforprofile",{"_index":212,"title":{},"body":{"classes/CommonUtil.html":{}}}],["createexternalurlforprofile(name",{"_index":222,"title":{},"body":{"classes/CommonUtil.html":{}}}],["createexternalurlforproject",{"_index":213,"title":{},"body":{"classes/CommonUtil.html":{}}}],["createexternalurlforproject(projecttitle",{"_index":225,"title":{},"body":{"classes/CommonUtil.html":{}}}],["custom",{"_index":420,"title":{},"body":{"components/DemoComponent.html":{}}}],["customurl",{"_index":250,"title":{},"body":{"classes/CommonUtil.html":{}}}],["customvalidator",{"_index":262,"title":{"classes/CustomValidator.html":{}},"body":{"classes/CustomValidator.html":{},"coverage.html":{}}}],["d]+$/.test(c.value",{"_index":318,"title":{},"body":{"classes/CustomValidator.html":{}}}],["data",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DemoComponent.html":{},"injectables/HttpService.html":{},"injectables/SampleService.html":{}}}],["data).pipe",{"_index":688,"title":{},"body":{"injectables/HttpService.html":{}}}],["data.message",{"_index":407,"title":{},"body":{"components/DemoComponent.html":{}}}],["data.statuscode",{"_index":405,"title":{},"body":{"components/DemoComponent.html":{}}}],["datatableparam",{"_index":923,"title":{},"body":{"injectables/SampleService.html":{}}}],["datatableparams",{"_index":889,"title":{},"body":{"injectables/SampleService.html":{}}}],["declarations",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":779,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["defined",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"interceptors/httpInterceptor.html":{}}}],["delete",{"_index":436,"title":{},"body":{"components/DemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["deletedata",{"_index":388,"title":{},"body":{"components/DemoComponent.html":{}}}],["demo",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DemoComponent.html":{},"modules/SampleRoutingModule.html":{}}}],["demo'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["demo.component.css",{"_index":386,"title":{},"body":{"components/DemoComponent.html":{}}}],["demo.component.html",{"_index":387,"title":{},"body":{"components/DemoComponent.html":{}}}],["democomponent",{"_index":48,"title":{"components/DemoComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["demostructureversiontwelve",{"_index":1026,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["detail?title=${jobtitle}&id=${jobid",{"_index":249,"title":{},"body":{"classes/CommonUtil.html":{}}}],["detail?title=${projecttitle}&id=${projectid",{"_index":246,"title":{},"body":{"classes/CommonUtil.html":{}}}],["detail?user=03",{"_index":253,"title":{},"body":{"classes/CommonUtil.html":{}}}],["dev",{"_index":1036,"title":{},"body":{"index.html":{}}}],["development",{"_index":1031,"title":{},"body":{"index.html":{}}}],["digit",{"_index":342,"title":{},"body":{"classes/CustomValidator.html":{}}}],["directive",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["directives",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1044,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1049,"title":{},"body":{"index.html":{}}}],["display",{"_index":497,"title":{},"body":{"components/ErrorComponent.html":{}}}],["dist",{"_index":1048,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["dynamic",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["d{3}[)]?[(\\s",{"_index":333,"title":{},"body":{"classes/CustomValidator.html":{}}}],["d{3}[\\s",{"_index":334,"title":{},"body":{"classes/CustomValidator.html":{}}}],["d{4}$/g",{"_index":335,"title":{},"body":{"classes/CustomValidator.html":{}}}],["e2e",{"_index":1058,"title":{},"body":{"index.html":{}}}],["ein_regx",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["email_regex",{"_index":1107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email_regexp",{"_index":321,"title":{},"body":{"classes/CustomValidator.html":{}}}],["email_regexp.test(control.value",{"_index":327,"title":{},"body":{"classes/CustomValidator.html":{}}}],["emailvalidator",{"_index":265,"title":{},"body":{"classes/CustomValidator.html":{}}}],["emailvalidator(control",{"_index":278,"title":{},"body":{"classes/CustomValidator.html":{}}}],["enable",{"_index":418,"title":{},"body":{"components/DemoComponent.html":{}}}],["end",{"_index":1057,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":986,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["enum",{"_index":532,"title":{},"body":{"injectables/ErrorService.html":{}}}],["enumerations",{"_index":978,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":236,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/HttpService.html":{},"coverage.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["environment.apiendpoint",{"_index":260,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["environment.apiendpoint+'user/signup",{"_index":1004,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["environment.apiendpoint}${api",{"_index":677,"title":{},"body":{"injectables/HttpService.html":{}}}],["environment.baseurl",{"_index":261,"title":{},"body":{"classes/CommonUtil.html":{}}}],["err",{"_index":410,"title":{},"body":{"components/DemoComponent.html":{},"injectables/HttpService.html":{}}}],["error",{"_index":374,"title":{},"body":{"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{},"interceptors/httpInterceptor.html":{}}}],["error'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["error(message",{"_index":843,"title":{},"body":{"injectables/NotificationService.html":{}}}],["error.component",{"_index":509,"title":{},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{}}}],["error.component.css",{"_index":438,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":439,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.error",{"_index":701,"title":{},"body":{"injectables/HttpService.html":{}}}],["error.error.message",{"_index":706,"title":{},"body":{"injectables/HttpService.html":{}}}],["error.message",{"_index":708,"title":{},"body":{"injectables/HttpService.html":{}}}],["error.routing",{"_index":510,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.status",{"_index":710,"title":{},"body":{"injectables/HttpService.html":{}}}],["error/error.service",{"_index":676,"title":{},"body":{"injectables/HttpService.html":{}}}],["error_routes",{"_index":512,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["errorcode",{"_index":530,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errorcomponent",{"_index":50,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorevent",{"_index":703,"title":{},"body":{"injectables/HttpService.html":{}}}],["errormessage",{"_index":528,"title":{},"body":{"injectables/ErrorService.html":{}}}],["errormodule",{"_index":503,"title":{"modules/ErrorModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errornotification",{"_index":649,"title":{},"body":{"injectables/HttpService.html":{}}}],["errornotification(res",{"_index":656,"title":{},"body":{"injectables/HttpService.html":{}}}],["errorroutingmodule",{"_index":507,"title":{"modules/ErrorRoutingModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["errorservice",{"_index":201,"title":{"injectables/ErrorService.html":{}},"body":{"injectables/AuthService.html":{},"components/DemoComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/SampleService.html":{},"coverage.html":{}}}],["event",{"_index":1016,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["execute",{"_index":1054,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"interceptors/httpInterceptor.html":{}}}],["exports",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleRoutingModule.html":{}}}],["external",{"_index":245,"title":{},"body":{"classes/CommonUtil.html":{}}}],["false",{"_index":179,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":476,"title":{},"body":{"components/ErrorComponent.html":{}}}],["fff",{"_index":474,"title":{},"body":{"components/ErrorComponent.html":{}}}],["fields",{"_index":376,"title":{},"body":{"classes/CustomValidator.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1041,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":1008,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["first",{"_index":1063,"title":{},"body":{"index.html":{}}}],["font",{"_index":475,"title":{},"body":{"components/ErrorComponent.html":{}}}],["forbidden",{"_index":571,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["foreach",{"_index":764,"title":{},"body":{"injectables/LoadashService.html":{}}}],["forin",{"_index":916,"title":{},"body":{"injectables/SampleService.html":{}}}],["form",{"_index":285,"title":{},"body":{"classes/CustomValidator.html":{}}}],["formcontrol",{"_index":274,"title":{},"body":{"classes/CustomValidator.html":{}}}],["formgroup",{"_index":283,"title":{},"body":{"classes/CustomValidator.html":{}}}],["four_zero_four_bg",{"_index":481,"title":{},"body":{"components/ErrorComponent.html":{}}}],["full",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":1067,"title":{},"body":{"index.html":{}}}],["gateway_time_out",{"_index":559,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["generate",{"_index":1043,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1028,"title":{},"body":{"index.html":{}}}],["get_content_by_type",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getapiendpointpath",{"_index":214,"title":{},"body":{"classes/CommonUtil.html":{}}}],["getbaseurl",{"_index":215,"title":{},"body":{"classes/CommonUtil.html":{}}}],["getheme",{"_index":766,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getisarray",{"_index":733,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisboolean",{"_index":741,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisbuffer",{"_index":743,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisdate",{"_index":737,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisempty",{"_index":731,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getiserror",{"_index":739,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisfunction",{"_index":745,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisnull",{"_index":747,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisnullorundefined",{"_index":749,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisnumber",{"_index":751,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisobject",{"_index":753,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisprimitive",{"_index":755,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisregexp",{"_index":735,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisstring",{"_index":757,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getissymbol",{"_index":759,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getisundefined",{"_index":761,"title":{},"body":{"injectables/LoadashService.html":{}}}],["getitem",{"_index":767,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":778,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getloginuserid",{"_index":768,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getloginuserobject",{"_index":769,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gets",{"_index":382,"title":{},"body":{"classes/CustomValidator.html":{}}}],["getsampledata",{"_index":389,"title":{},"body":{"components/DemoComponent.html":{}}}],["getting",{"_index":1024,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":771,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gettoken(key",{"_index":785,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["gmail.com)(?!yahoo.com)(?!aol.com)(?!outlook.com)(?!zoho.com)(?!mail.com)(?!protonmail.com)(?!icloud.com)(?!gmx.com)(?!yandex.com)(?!hubspot.com)(?!hotmail.com)(?!yahoo.co.in)([\\w",{"_index":330,"title":{},"body":{"classes/CustomValidator.html":{}}}],["gmail.com)(?!yahoo.com)(?!aol.com)(?!outlook.com)(?!zoho.com)(?!mail.com)(?!protonmail.com)(?!icloud.com)(?!gmx.com)(?!yandex.com)(?!hubspot.com)(?!hotmail.com)([\\w",{"_index":1113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go",{"_index":447,"title":{},"body":{"components/ErrorComponent.html":{},"index.html":{}}}],["gone",{"_index":584,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["graph",{"_index":1075,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":149,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":151,"title":{},"body":{"guards/AuthGuard.html":{}}}],["h1",{"_index":487,"title":{},"body":{"components/ErrorComponent.html":{}}}],["h3",{"_index":490,"title":{},"body":{"components/ErrorComponent.html":{}}}],["handleerror",{"_index":650,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror(error",{"_index":659,"title":{},"body":{"injectables/HttpService.html":{}}}],["hashlocationstrategy",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["height",{"_index":484,"title":{},"body":{"components/ErrorComponent.html":{}}}],["help",{"_index":1068,"title":{},"body":{"index.html":{}}}],["here",{"_index":383,"title":{},"body":{"classes/CustomValidator.html":{}}}],["home",{"_index":448,"title":{},"body":{"components/ErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":238,"title":{},"body":{"classes/CommonUtil.html":{},"miscellaneous/variables.html":{}}}],["hours",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["http",{"_index":655,"title":{},"body":{"injectables/HttpService.html":{}}}],["http://localhost:4200",{"_index":1038,"title":{},"body":{"index.html":{}}}],["http://localhost:8090",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http[s]?://){0,1}(www.){0,1}[a",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["http_version_not_supported",{"_index":561,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["httpclient",{"_index":653,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpclientmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":660,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpevent",{"_index":1007,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["httphandler",{"_index":995,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["httpinterceptor",{"_index":75,"title":{"interceptors/httpInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"interceptors/httpInterceptor.html":{},"overview.html":{}}}],["httprequest",{"_index":994,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["https://blog.jscrambler.com/how",{"_index":859,"title":{},"body":{"injectables/NotificationService.html":{}}}],["httpservice",{"_index":72,"title":{"injectables/HttpService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/SampleService.html":{},"coverage.html":{},"overview.html":{}}}],["id",{"_index":223,"title":{},"body":{"classes/CommonUtil.html":{},"components/DemoComponent.html":{}}}],["identifier",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":482,"title":{},"body":{"components/ErrorComponent.html":{}}}],["img",{"_index":479,"title":{},"body":{"components/ErrorComponent.html":{}}}],["implements",{"_index":137,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"interceptors/httpInterceptor.html":{},"index.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interceptors/httpInterceptor.html":{}}}],["import('./modules/auth/auth.module').then(auth",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/error/error.module').then(m",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/sample/sample.module').then(m",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":493,"title":{},"body":{"components/ErrorComponent.html":{}}}],["imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{}}}],["incorrectemailformat",{"_index":328,"title":{},"body":{"classes/CustomValidator.html":{}}}],["incorrectmobilephoneformat",{"_index":337,"title":{},"body":{"classes/CustomValidator.html":{}}}],["incorrectnumericformat",{"_index":315,"title":{},"body":{"classes/CustomValidator.html":{}}}],["incorrectpasswordformat",{"_index":353,"title":{},"body":{"classes/CustomValidator.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"miscellaneous/enumerations.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":933,"title":{},"body":{"interfaces/ValidationResult.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"interceptors/httpInterceptor.html":{}}}],["info(message",{"_index":846,"title":{},"body":{"injectables/NotificationService.html":{}}}],["information",{"_index":868,"title":{},"body":{"injectables/NotificationService.html":{}}}],["injectable",{"_index":166,"title":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"coverage.html":{},"interceptors/httpInterceptor.html":{}}}],["injectables",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"overview.html":{}}}],["inline",{"_index":498,"title":{},"body":{"components/ErrorComponent.html":{}}}],["instanceof",{"_index":702,"title":{},"body":{"injectables/HttpService.html":{}}}],["intercept",{"_index":988,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["intercept(req",{"_index":993,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["interceptor",{"_index":952,"title":{"interceptors/httpInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":984,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["interface",{"_index":930,"title":{"interfaces/ValidationResult.html":{}},"body":{"interfaces/ValidationResult.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":931,"title":{},"body":{"interfaces/ValidationResult.html":{}}}],["isarray",{"_index":715,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isboolean",{"_index":719,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isbuffer",{"_index":720,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isdate",{"_index":717,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isempty",{"_index":714,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isenable",{"_index":419,"title":{},"body":{"components/DemoComponent.html":{}}}],["iserror",{"_index":718,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isfunction",{"_index":721,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isnull",{"_index":722,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isnullorundefined",{"_index":723,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isnumber",{"_index":724,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isnumbercheck",{"_index":266,"title":{},"body":{"classes/CustomValidator.html":{}}}],["isobject",{"_index":725,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isprimitive",{"_index":726,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isregexp",{"_index":716,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isstring",{"_index":727,"title":{},"body":{"injectables/LoadashService.html":{}}}],["issymbol",{"_index":728,"title":{},"body":{"injectables/LoadashService.html":{}}}],["isundefined",{"_index":729,"title":{},"body":{"injectables/LoadashService.html":{}}}],["jkii@3456",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jobid",{"_index":219,"title":{},"body":{"classes/CommonUtil.html":{}}}],["jobtitle",{"_index":221,"title":{},"body":{"classes/CommonUtil.html":{}}}],["jquery",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorageobject",{"_index":803,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(sessionstorageobject",{"_index":806,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(themename",{"_index":815,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(token",{"_index":807,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":799,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["karma",{"_index":1056,"title":{},"body":{"index.html":{}}}],["key",{"_index":316,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/LocalStorageService.html":{},"injectables/SampleService.html":{},"interfaces/ValidationResult.html":{}}}],["left",{"_index":469,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/NotificationService.html":{}}}],["legend",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["length",{"_index":305,"title":{},"body":{"classes/CustomValidator.html":{}}}],["length_required",{"_index":586,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["line",{"_index":303,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["link",{"_index":858,"title":{},"body":{"injectables/NotificationService.html":{}}}],["link_404",{"_index":491,"title":{},"body":{"components/ErrorComponent.html":{}}}],["loadashservice",{"_index":711,"title":{"injectables/LoadashService.html":{}},"body":{"injectables/LoadashService.html":{},"coverage.html":{}}}],["loadchildren",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localechangeservice",{"_index":820,"title":{"injectables/LocaleChangeService.html":{}},"body":{"injectables/LocaleChangeService.html":{},"coverage.html":{}}}],["localstorage.clear",{"_index":817,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(key",{"_index":802,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":808,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":798,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageobject",{"_index":801,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":73,"title":{"injectables/LocalStorageService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/SampleService.html":{},"coverage.html":{},"overview.html":{}}}],["locationstrategy",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["logged",{"_index":171,"title":{},"body":{"guards/AuthGuard.html":{}}}],["login",{"_index":173,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthRoutingModule.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["login.component.css",{"_index":830,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":831,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":52,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":772,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["long",{"_index":351,"title":{},"body":{"classes/CustomValidator.html":{}}}],["look",{"_index":442,"title":{},"body":{"components/ErrorComponent.html":{}}}],["looking",{"_index":445,"title":{},"body":{"components/ErrorComponent.html":{}}}],["lost",{"_index":444,"title":{},"body":{"components/ErrorComponent.html":{}}}],["lowercase",{"_index":343,"title":{},"body":{"classes/CustomValidator.html":{}}}],["m.errormodule",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.samplemodule",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map",{"_index":673,"title":{},"body":{"injectables/HttpService.html":{}}}],["map((res",{"_index":681,"title":{},"body":{"injectables/HttpService.html":{}}}],["margin",{"_index":455,"title":{},"body":{"components/ErrorComponent.html":{}}}],["markformgrouptouched",{"_index":267,"title":{},"body":{"classes/CustomValidator.html":{}}}],["markformgrouptouched(form",{"_index":282,"title":{},"body":{"classes/CustomValidator.html":{}}}],["master_table_paginate_dropdown:[10,20,30",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["master_table_row_size",{"_index":1115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interceptors/httpInterceptor.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matter",{"_index":384,"title":{},"body":{"classes/CustomValidator.html":{}}}],["max",{"_index":304,"title":{},"body":{"classes/CustomValidator.html":{}}}],["message",{"_index":845,"title":{},"body":{"injectables/NotificationService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["method",{"_index":664,"title":{},"body":{"injectables/HttpService.html":{}}}],["method_not_allowed",{"_index":574,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["methods",{"_index":141,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interceptors/httpInterceptor.html":{}}}],["miscellaneous",{"_index":977,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mismatchconfirmpassword",{"_index":359,"title":{},"body":{"classes/CustomValidator.html":{}}}],["mobile_phone",{"_index":1156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mobilephone_regexp",{"_index":332,"title":{},"body":{"classes/CustomValidator.html":{}}}],["mobilephone_regexp.test(control.value",{"_index":336,"title":{},"body":{"classes/CustomValidator.html":{}}}],["mobilephonevalidator",{"_index":268,"title":{},"body":{"classes/CustomValidator.html":{}}}],["mobilephonevalidator(control",{"_index":286,"title":{},"body":{"classes/CustomValidator.html":{}}}],["modify",{"_index":983,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{}},"body":{}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1069,"title":{},"body":{"index.html":{}}}],["moved",{"_index":643,"title":{},"body":{"injectables/ErrorService.html":{}}}],["moved_permanantly",{"_index":540,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["moved_temporary",{"_index":542,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["multi",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple_choice",{"_index":538,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interceptors/httpInterceptor.html":{},"index.html":{}}}],["nan",{"_index":320,"title":{},"body":{"classes/CustomValidator.html":{}}}],["navigate",{"_index":1037,"title":{},"body":{"index.html":{}}}],["need",{"_index":1062,"title":{},"body":{"index.html":{}}}],["new",{"_index":825,"title":{},"body":{"injectables/LocaleChangeService.html":{},"injectables/SampleService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":302,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["next.handle(req",{"_index":1012,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["ng",{"_index":1034,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{}}}],["ngoninit",{"_index":142,"title":{},"body":{"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["ngx",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{},"dependencies.html":{},"interceptors/httpInterceptor.html":{}}}],["ngxspinnermodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":991,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["no_content",{"_index":603,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["not_acceptable",{"_index":576,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":573,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["not_implemented",{"_index":553,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["not_modified",{"_index":546,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["notification",{"_index":520,"title":{},"body":{"injectables/ErrorService.html":{}}}],["notification/notification.service",{"_index":531,"title":{},"body":{"injectables/ErrorService.html":{}}}],["notificationcode",{"_index":524,"title":{},"body":{"injectables/ErrorService.html":{}}}],["notificationmessage",{"_index":522,"title":{},"body":{"injectables/ErrorService.html":{}}}],["notifications",{"_index":862,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notificationservice",{"_index":74,"title":{"injectables/NotificationService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ErrorService.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["null",{"_index":308,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{}}}],["number",{"_index":1001,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["numbers",{"_index":317,"title":{},"body":{"classes/CustomValidator.html":{}}}],["numeric_regexp",{"_index":311,"title":{},"body":{"classes/CustomValidator.html":{}}}],["numeric_regexp.test(control.value",{"_index":314,"title":{},"body":{"classes/CustomValidator.html":{}}}],["numericvalidation",{"_index":269,"title":{},"body":{"classes/CustomValidator.html":{}}}],["numericvalidation(control",{"_index":288,"title":{},"body":{"classes/CustomValidator.html":{}}}],["oauth/token",{"_index":1005,"title":{},"body":{"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":907,"title":{},"body":{"injectables/SampleService.html":{},"miscellaneous/variables.html":{}}}],["object.values(form.controls).foreach(control",{"_index":360,"title":{},"body":{"classes/CustomValidator.html":{}}}],["observable",{"_index":669,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["ocured",{"_index":705,"title":{},"body":{"injectables/HttpService.html":{}}}],["offset",{"_index":908,"title":{},"body":{"injectables/SampleService.html":{}}}],["ok",{"_index":408,"title":{},"body":{"components/DemoComponent.html":{},"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["one",{"_index":341,"title":{},"body":{"classes/CustomValidator.html":{}}}],["oninit",{"_index":138,"title":{},"body":{"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["opennewtab",{"_index":216,"title":{},"body":{"classes/CommonUtil.html":{}}}],["opennewtab(url",{"_index":231,"title":{},"body":{"classes/CommonUtil.html":{}}}],["opennewtabforexternalurl",{"_index":217,"title":{},"body":{"classes/CommonUtil.html":{}}}],["opennewtabforexternalurl(url",{"_index":234,"title":{},"body":{"classes/CommonUtil.html":{}}}],["optional",{"_index":158,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{},"index.html":{},"overview.html":{}}}],["out_of_resources",{"_index":557,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["overview",{"_index":1071,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":962,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":452,"title":{},"body":{"components/ErrorComponent.html":{}}}],["page",{"_index":174,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"index.html":{}}}],["page_404",{"_index":471,"title":{},"body":{"components/ErrorComponent.html":{}}}],["parameters",{"_index":157,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["paramobject",{"_index":899,"title":{},"body":{"injectables/SampleService.html":{}}}],["paramobject[key",{"_index":918,"title":{},"body":{"injectables/SampleService.html":{}}}],["params",{"_index":915,"title":{},"body":{"injectables/SampleService.html":{}}}],["params.set(key",{"_index":917,"title":{},"body":{"injectables/SampleService.html":{}}}],["parseint(errorcode",{"_index":610,"title":{},"body":{"injectables/ErrorService.html":{}}}],["parseint(notificationcode",{"_index":631,"title":{},"body":{"injectables/ErrorService.html":{}}}],["part",{"_index":378,"title":{},"body":{"classes/CustomValidator.html":{}}}],["partial_content",{"_index":607,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["partial_information",{"_index":601,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["password",{"_index":379,"title":{},"body":{"classes/CustomValidator.html":{}}}],["password_regexp",{"_index":338,"title":{},"body":{"classes/CustomValidator.html":{}}}],["password_regx",{"_index":1103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passwordconfirming",{"_index":270,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordconfirming(c",{"_index":290,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordconfirming1(c",{"_index":365,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordmismatch",{"_index":380,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordrequired",{"_index":357,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordsmatch(password",{"_index":367,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordvalidator",{"_index":271,"title":{},"body":{"classes/CustomValidator.html":{}}}],["passwordvalidator(control",{"_index":293,"title":{},"body":{"classes/CustomValidator.html":{}}}],["path",{"_index":119,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["path_constants",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":120,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payment_required",{"_index":569,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["permanantly",{"_index":644,"title":{},"body":{"injectables/ErrorService.html":{}}}],["pipe(tap",{"_index":1015,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["platform",{"_index":1059,"title":{},"body":{"index.html":{}}}],["port",{"_index":240,"title":{},"body":{"classes/CommonUtil.html":{}}}],["position",{"_index":450,"title":{},"body":{"components/ErrorComponent.html":{}}}],["positionclass",{"_index":864,"title":{},"body":{"injectables/NotificationService.html":{}}}],["post",{"_index":425,"title":{},"body":{"components/DemoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["postdata",{"_index":390,"title":{},"body":{"components/DemoComponent.html":{}}}],["precondition_failed",{"_index":588,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["preparequeryparam",{"_index":891,"title":{},"body":{"injectables/SampleService.html":{}}}],["preparequeryparam(paramobject",{"_index":897,"title":{},"body":{"injectables/SampleService.html":{}}}],["preview/worker",{"_index":251,"title":{},"body":{"classes/CommonUtil.html":{}}}],["private",{"_index":168,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DemoComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["production",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":252,"title":{},"body":{"classes/CommonUtil.html":{}}}],["project",{"_index":1027,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":226,"title":{},"body":{"classes/CommonUtil.html":{}}}],["projecttitle",{"_index":228,"title":{},"body":{"classes/CommonUtil.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["protocol",{"_index":242,"title":{},"body":{"classes/CommonUtil.html":{}}}],["protocol}//${host}:${port}/#/preview/${route}?name=${name}&id=${id",{"_index":247,"title":{},"body":{"classes/CommonUtil.html":{}}}],["protocol}//${host}:${port}/#/preview/job",{"_index":248,"title":{},"body":{"classes/CommonUtil.html":{}}}],["protocol}//${host}:${port}/#/preview/project",{"_index":244,"title":{},"body":{"classes/CommonUtil.html":{}}}],["provide",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{}}}],["providers",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["proxy_authentication_required",{"_index":578,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["public",{"_index":770,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["put",{"_index":982,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["putdata",{"_index":391,"title":{},"body":{"components/DemoComponent.html":{}}}],["queryparam",{"_index":890,"title":{},"body":{"injectables/SampleService.html":{}}}],["queryparams",{"_index":176,"title":{},"body":{"guards/AuthGuard.html":{}}}],["radius",{"_index":465,"title":{},"body":{"components/ErrorComponent.html":{}}}],["redirect",{"_index":172,"title":{},"body":{"guards/AuthGuard.html":{}}}],["redirectioncodes",{"_index":537,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["redirectioncodes.moved_permanantly",{"_index":641,"title":{},"body":{"injectables/ErrorService.html":{}}}],["redirectto",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":857,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["regexforfilterdata",{"_index":989,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["regexforfilterdata(urlstring",{"_index":998,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["region",{"_index":421,"title":{},"body":{"components/DemoComponent.html":{},"injectables/SampleService.html":{}}}],["regionobject",{"_index":412,"title":{},"body":{"components/DemoComponent.html":{}}}],["regx_constant",{"_index":948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":1040,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":773,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key",{"_index":788,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["req",{"_index":997,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["request_entity_too_large",{"_index":590,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["request_time_out",{"_index":580,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["request_url_too_large",{"_index":592,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["requestcall",{"_index":651,"title":{},"body":{"injectables/HttpService.html":{}}}],["requestcall(api",{"_index":663,"title":{},"body":{"injectables/HttpService.html":{}}}],["requestlist",{"_index":987,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["required",{"_index":272,"title":{},"body":{"classes/CustomValidator.html":{}}}],["required(control",{"_index":295,"title":{},"body":{"classes/CustomValidator.html":{}}}],["res",{"_index":658,"title":{},"body":{"injectables/HttpService.html":{}}}],["res.errorcode",{"_index":698,"title":{},"body":{"injectables/HttpService.html":{}}}],["res.message",{"_index":697,"title":{},"body":{"injectables/HttpService.html":{}}}],["res.message.length",{"_index":694,"title":{},"body":{"injectables/HttpService.html":{}}}],["res.statuscode",{"_index":693,"title":{},"body":{"injectables/HttpService.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}],["reset_content",{"_index":605,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["respective",{"_index":255,"title":{},"body":{"classes/CommonUtil.html":{}}}],["response",{"_index":678,"title":{},"body":{"injectables/HttpService.html":{}}}],["results",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"interceptors/httpInterceptor.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":170,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["returns",{"_index":146,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interceptors/httpInterceptor.html":{}}}],["returnurl",{"_index":177,"title":{},"body":{"guards/AuthGuard.html":{}}}],["right",{"_index":853,"title":{},"body":{"injectables/NotificationService.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{}}}],["root'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["route",{"_index":164,"title":{},"body":{"guards/AuthGuard.html":{},"classes/CommonUtil.html":{}}}],["router",{"_index":155,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["routermodule",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleRoutingModule.html":{}}}],["routermodule.forchild(auth_routes",{"_index":194,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["routermodule.forchild(error_routes",{"_index":513,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["routermodule.forchild(sample_routes",{"_index":886,"title":{},"body":{"modules/SampleRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":162,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":116,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/ErrorRoutingModule.html":{},"modules/SampleRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1033,"title":{},"body":{"index.html":{}}}],["running",{"_index":1050,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":671,"title":{},"body":{"injectables/HttpService.html":{},"injectables/LocaleChangeService.html":{},"dependencies.html":{},"interceptors/httpInterceptor.html":{}}}],["rxjs/operators",{"_index":674,"title":{},"body":{"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"interceptors/httpInterceptor.html":{}}}],["s",{"_index":369,"title":{},"body":{"classes/CustomValidator.html":{}}}],["s+$).{8",{"_index":1106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["same",{"_index":377,"title":{},"body":{"classes/CustomValidator.html":{}}}],["sample",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/SampleComponent.html":{},"miscellaneous/variables.html":{}}}],["sample'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["sample.component",{"_index":882,"title":{},"body":{"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{}}}],["sample.component.css",{"_index":871,"title":{},"body":{"components/SampleComponent.html":{}}}],["sample.component.html",{"_index":872,"title":{},"body":{"components/SampleComponent.html":{}}}],["sample.routing",{"_index":883,"title":{},"body":{"modules/SampleModule.html":{}}}],["sample_file_path",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sample_get",{"_index":1101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sample_post",{"_index":1102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sample_routes",{"_index":885,"title":{},"body":{"modules/SampleRoutingModule.html":{}}}],["samplecomponent",{"_index":54,"title":{"components/SampleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sampledelete",{"_index":892,"title":{},"body":{"injectables/SampleService.html":{}}}],["sampledelete(data",{"_index":900,"title":{},"body":{"injectables/SampleService.html":{}}}],["sampleget",{"_index":893,"title":{},"body":{"injectables/SampleService.html":{}}}],["sampleget(datatableparam",{"_index":922,"title":{},"body":{"injectables/SampleService.html":{}}}],["samplemodule",{"_index":875,"title":{"modules/SampleModule.html":{}},"body":{"modules/SampleModule.html":{},"modules.html":{},"overview.html":{}}}],["samplepost",{"_index":894,"title":{},"body":{"injectables/SampleService.html":{}}}],["samplepost(data",{"_index":903,"title":{},"body":{"injectables/SampleService.html":{}}}],["sampleput",{"_index":895,"title":{},"body":{"injectables/SampleService.html":{}}}],["sampleput(data",{"_index":905,"title":{},"body":{"injectables/SampleService.html":{}}}],["sampleroutingmodule",{"_index":879,"title":{"modules/SampleRoutingModule.html":{}},"body":{"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["sampleservice",{"_index":393,"title":{"injectables/SampleService.html":{}},"body":{"components/DemoComponent.html":{},"injectables/SampleService.html":{},"coverage.html":{}}}],["scaffolding",{"_index":1042,"title":{},"body":{"index.html":{}}}],["searchtext",{"_index":911,"title":{},"body":{"injectables/SampleService.html":{}}}],["see_other",{"_index":544,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["selectedlang",{"_index":823,"title":{},"body":{"injectables/LocaleChangeService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["self",{"_index":661,"title":{},"body":{"injectables/HttpService.html":{}}}],["serif",{"_index":478,"title":{},"body":{"components/ErrorComponent.html":{}}}],["serve",{"_index":1035,"title":{},"body":{"index.html":{}}}],["server",{"_index":1032,"title":{},"body":{"index.html":{}}}],["server_error",{"_index":551,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["server_shutdown",{"_index":564,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["servererrorcodes",{"_index":550,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["service",{"_index":700,"title":{},"body":{"injectables/HttpService.html":{}}}],["service/locale",{"_index":821,"title":{},"body":{"injectables/LocaleChangeService.html":{},"coverage.html":{}}}],["service/localstorage.service",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SampleService.html":{}}}],["service/localstorage.service.ts",{"_index":765,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["service/localstorage.service.ts:14",{"_index":782,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:32",{"_index":797,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:40",{"_index":786,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:54",{"_index":789,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:59",{"_index":783,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:6",{"_index":791,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:64",{"_index":784,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:69",{"_index":777,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:73",{"_index":793,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["service/localstorage.service.ts:77",{"_index":787,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["services/auth.service.ts",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["services/auth.service.ts:10",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["services/http.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/SampleService.html":{}}}],["services/http.service.ts",{"_index":648,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["services/http.service.ts:12",{"_index":654,"title":{},"body":{"injectables/HttpService.html":{}}}],["services/http.service.ts:19",{"_index":666,"title":{},"body":{"injectables/HttpService.html":{}}}],["services/http.service.ts:67",{"_index":657,"title":{},"body":{"injectables/HttpService.html":{}}}],["services/http.service.ts:77",{"_index":662,"title":{},"body":{"injectables/HttpService.html":{}}}],["services/localstorage",{"_index":167,"title":{},"body":{"guards/AuthGuard.html":{}}}],["services/sample",{"_index":400,"title":{},"body":{"components/DemoComponent.html":{}}}],["services/sample.service",{"_index":401,"title":{},"body":{"components/DemoComponent.html":{}}}],["services/sample.service.ts",{"_index":888,"title":{},"body":{"injectables/SampleService.html":{},"coverage.html":{}}}],["services/sample.service.ts:14",{"_index":912,"title":{},"body":{"injectables/SampleService.html":{}}}],["services/sample.service.ts:22",{"_index":896,"title":{},"body":{"injectables/SampleService.html":{}}}],["services/sample.service.ts:31",{"_index":898,"title":{},"body":{"injectables/SampleService.html":{}}}],["services/sample.service.ts:40",{"_index":902,"title":{},"body":{"injectables/SampleService.html":{}}}],["services/sample.service.ts:46",{"_index":904,"title":{},"body":{"injectables/SampleService.html":{}}}],["services/sample.service.ts:51",{"_index":906,"title":{},"body":{"injectables/SampleService.html":{}}}],["services/sample.service.ts:56",{"_index":901,"title":{},"body":{"injectables/SampleService.html":{}}}],["sessionstorage.clear",{"_index":816,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.getitem(key",{"_index":805,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.removeitem(key",{"_index":809,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.setitem('iconic_worker_theme",{"_index":814,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorage.setitem(key",{"_index":800,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sessionstorageobject",{"_index":804,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem",{"_index":774,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":790,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settheme",{"_index":775,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settheme(themename",{"_index":792,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settimeout",{"_index":818,"title":{},"body":{"injectables/LocalStorageService.html":{},"interceptors/httpInterceptor.html":{}}}],["settoken",{"_index":776,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settoken(key",{"_index":795,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["signup",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthRoutingModule.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["signup.component.css",{"_index":926,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup.component.html",{"_index":927,"title":{},"body":{"components/SignupComponent.html":{}}}],["signupcomponent",{"_index":56,"title":{"components/SignupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["size",{"_index":488,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/SampleService.html":{}}}],["solid",{"_index":463,"title":{},"body":{"components/ErrorComponent.html":{}}}],["sortfield",{"_index":909,"title":{},"body":{"injectables/SampleService.html":{}}}],["sortorder",{"_index":910,"title":{},"body":{"injectables/SampleService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"modules/ErrorModule.html":{},"modules/ErrorRoutingModule.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LoadashService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"modules/SampleModule.html":{},"modules/SampleRoutingModule.html":{},"injectables/SampleService.html":{},"components/SignupComponent.html":{},"interfaces/ValidationResult.html":{},"interceptors/httpInterceptor.html":{},"index.html":{}}}],["special",{"_index":345,"title":{},"body":{"classes/CustomValidator.html":{}}}],["spinner",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"interceptors/httpInterceptor.html":{}}}],["src/.../apiconstants.ts",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../apimethodname.ts",{"_index":979,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../commonconstants.ts",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.service.ts",{"_index":980,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../pathconstants.ts",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../regxconstant.ts",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/constants/apiconstants.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/constants/apimethodname",{"_index":914,"title":{},"body":{"injectables/SampleService.html":{}}}],["src/app/core/constants/apimethodname.ts",{"_index":981,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/constants/commonconstants.ts",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/constants/pathconstants.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/constants/regxconstant.ts",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/gaurds/auth.guard.ts",{"_index":152,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/gaurds/auth.guard.ts:12",{"_index":156,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/gaurds/auth.guard.ts:19",{"_index":163,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/services/error/error.service",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"components/DemoComponent.html":{},"injectables/SampleService.html":{}}}],["src/app/core/services/error/error.service.ts",{"_index":514,"title":{},"body":{"injectables/ErrorService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/error/error.service.ts:123",{"_index":526,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/services/error/error.service.ts:154",{"_index":523,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/services/error/error.service.ts:61",{"_index":519,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/services/error/error.service.ts:65",{"_index":529,"title":{},"body":{"injectables/ErrorService.html":{}}}],["src/app/core/services/http",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"injectables/SampleService.html":{},"coverage.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts",{"_index":951,"title":{},"body":{"coverage.html":{},"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts:16",{"_index":1002,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts:17",{"_index":1003,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts:18",{"_index":1006,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts:21",{"_index":992,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts:26",{"_index":996,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/interceptor/httpinterceptor.ts:60",{"_index":999,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["src/app/core/services/loadash/loadash.service.ts",{"_index":712,"title":{},"body":{"injectables/LoadashService.html":{},"coverage.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:24",{"_index":730,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:28",{"_index":732,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:36",{"_index":734,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:40",{"_index":736,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:43",{"_index":738,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:46",{"_index":740,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:50",{"_index":742,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:54",{"_index":744,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:58",{"_index":746,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:62",{"_index":748,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:66",{"_index":750,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:70",{"_index":752,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:74",{"_index":754,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:78",{"_index":756,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:82",{"_index":758,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:86",{"_index":760,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/loadash/loadash.service.ts:90",{"_index":762,"title":{},"body":{"injectables/LoadashService.html":{}}}],["src/app/core/services/localstorage",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"injectables/SampleService.html":{},"coverage.html":{}}}],["src/app/core/services/notification/notification.service.ts",{"_index":834,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/services/notification/notification.service.ts:11",{"_index":856,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:12",{"_index":855,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:13",{"_index":854,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:14",{"_index":842,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:18",{"_index":849,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:25",{"_index":844,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:32",{"_index":851,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/notification/notification.service.ts:39",{"_index":847,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/services/util/commonutil.ts",{"_index":209,"title":{},"body":{"classes/CommonUtil.html":{},"coverage.html":{}}}],["src/app/core/services/util/commonutil.ts:15",{"_index":224,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/commonutil.ts:25",{"_index":220,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/commonutil.ts:35",{"_index":232,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/commonutil.ts:42",{"_index":235,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/commonutil.ts:46",{"_index":229,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/commonutil.ts:5",{"_index":227,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/commonutil.ts:50",{"_index":230,"title":{},"body":{"classes/CommonUtil.html":{}}}],["src/app/core/services/util/customvalidator.ts",{"_index":263,"title":{},"body":{"classes/CustomValidator.html":{},"coverage.html":{}}}],["src/app/core/services/util/customvalidator.ts:17",{"_index":289,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:24",{"_index":280,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:33",{"_index":279,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:40",{"_index":275,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:49",{"_index":287,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:57",{"_index":294,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:66",{"_index":291,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:77",{"_index":284,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/customvalidator.ts:9",{"_index":296,"title":{},"body":{"classes/CustomValidator.html":{}}}],["src/app/core/services/util/validationresult.ts",{"_index":932,"title":{},"body":{"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["src/app/core/services/util/validationresult.ts:2",{"_index":934,"title":{},"body":{"interfaces/ValidationResult.html":{}}}],["src/app/modules/auth/auth.component.ts",{"_index":136,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/auth.component.ts:12",{"_index":145,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/auth/auth.component.ts:8",{"_index":144,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.routing.ts",{"_index":191,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/modules/auth/components/login/login.component.ts",{"_index":829,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:14",{"_index":833,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:8",{"_index":832,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/signup/signup.component.ts",{"_index":925,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["src/app/modules/auth/components/signup/signup.component.ts:12",{"_index":929,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/auth/components/signup/signup.component.ts:8",{"_index":928,"title":{},"body":{"components/SignupComponent.html":{}}}],["src/app/modules/auth/services/auth",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/modules/error/error.component.ts",{"_index":437,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/app/modules/error/error.component.ts:12",{"_index":441,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/modules/error/error.component.ts:8",{"_index":440,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/app/modules/error/error.module.ts",{"_index":508,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/modules/error/error.routing.ts",{"_index":511,"title":{},"body":{"modules/ErrorRoutingModule.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts",{"_index":385,"title":{},"body":{"components/DemoComponent.html":{},"coverage.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts:10",{"_index":394,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts:17",{"_index":397,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts:21",{"_index":396,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts:35",{"_index":398,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts:60",{"_index":399,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/modules/sample/components/demo/demo.component.ts:85",{"_index":395,"title":{},"body":{"components/DemoComponent.html":{}}}],["src/app/modules/sample/sample.component.ts",{"_index":870,"title":{},"body":{"components/SampleComponent.html":{},"coverage.html":{}}}],["src/app/modules/sample/sample.component.ts:12",{"_index":874,"title":{},"body":{"components/SampleComponent.html":{}}}],["src/app/modules/sample/sample.component.ts:8",{"_index":873,"title":{},"body":{"components/SampleComponent.html":{}}}],["src/app/modules/sample/sample.module.ts",{"_index":880,"title":{},"body":{"modules/SampleModule.html":{}}}],["src/app/modules/sample/sample.routing.ts",{"_index":884,"title":{},"body":{"modules/SampleRoutingModule.html":{}}}],["src/app/modules/sample/services/sample",{"_index":887,"title":{},"body":{"injectables/SampleService.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":237,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/HttpService.html":{},"interceptors/httpInterceptor.html":{}}}],["src/environments/environment.prod.ts",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssn_regx",{"_index":1132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":1025,"title":{"index.html":{}},"body":{}}],["state",{"_index":161,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url",{"_index":178,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":210,"title":{},"body":{"classes/CommonUtil.html":{},"classes/CustomValidator.html":{}}}],["status",{"_index":709,"title":{},"body":{"injectables/HttpService.html":{}}}],["storageservice",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SampleService.html":{}}}],["storagetype",{"_index":780,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":1047,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"interfaces/ValidationResult.html":{}}}],["structure",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["success",{"_index":646,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/NotificationService.html":{}}}],["success(message",{"_index":848,"title":{},"body":{"injectables/NotificationService.html":{}}}],["successcodes",{"_index":596,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["successcodes.accepted",{"_index":635,"title":{},"body":{"injectables/ErrorService.html":{}}}],["successcodes.created",{"_index":634,"title":{},"body":{"injectables/ErrorService.html":{}}}],["successcodes.no_content",{"_index":637,"title":{},"body":{"injectables/ErrorService.html":{}}}],["successcodes.ok",{"_index":632,"title":{},"body":{"injectables/ErrorService.html":{}}}],["successcodes.partial_content",{"_index":639,"title":{},"body":{"injectables/ErrorService.html":{}}}],["successcodes.partial_information",{"_index":636,"title":{},"body":{"injectables/ErrorService.html":{}}}],["successcodes.reset_content",{"_index":638,"title":{},"body":{"injectables/ErrorService.html":{}}}],["support",{"_index":1072,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1073,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":611,"title":{},"body":{"injectables/ErrorService.html":{},"injectables/HttpService.html":{}}}],["switching_protocol",{"_index":535,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["table",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":1009,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["test",{"_index":1053,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test/testget",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/testpost",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test_api_get",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test_api_post",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":1065,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1052,"title":{},"body":{"index.html":{}}}],["themename",{"_index":794,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.bottomleft",{"_index":865,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.count",{"_index":1014,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["this.error.usernotification(res.statuscode",{"_index":696,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.error.whicherror(error.status",{"_index":707,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.errornotification(res",{"_index":682,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.errorservice.usernotification(data.statuscode",{"_index":409,"title":{},"body":{"components/DemoComponent.html":{}}}],["this.getitem('iconic_worker_theme",{"_index":813,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getitem('user",{"_index":811,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getsampledata",{"_index":402,"title":{},"body":{"components/DemoComponent.html":{}}}],["this.handleerror(err",{"_index":685,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.delete(`${url",{"_index":692,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.get(`${url}`).pipe",{"_index":680,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.post(`${url",{"_index":687,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.http.put(`${url",{"_index":690,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpservice.get(url",{"_index":924,"title":{},"body":{"injectables/SampleService.html":{}}}],["this.httpservice.requestcall(url",{"_index":921,"title":{},"body":{"injectables/SampleService.html":{}}}],["this.localstorageservice.getitem('user",{"_index":169,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.markformgrouptouched(control",{"_index":364,"title":{},"body":{"classes/CustomValidator.html":{}}}],["this.notification.error(errormessage",{"_index":614,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.notification.info('information",{"_index":642,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.notification.success(notificationmessage",{"_index":633,"title":{},"body":{"injectables/ErrorService.html":{}}}],["this.preparequeryparam(this.datatableparams",{"_index":920,"title":{},"body":{"injectables/SampleService.html":{}}}],["this.queryparam",{"_index":919,"title":{},"body":{"injectables/SampleService.html":{}}}],["this.regexforfilterdata(req.url",{"_index":1010,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["this.requestlist.includes(req.url",{"_index":1011,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["this.router.navigate(['login",{"_index":175,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.url",{"_index":1019,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["this.sampleservice.sampledelete(regionobject).subscribe",{"_index":435,"title":{},"body":{"components/DemoComponent.html":{}}}],["this.sampleservice.sampleget().subscribe",{"_index":403,"title":{},"body":{"components/DemoComponent.html":{}}}],["this.sampleservice.samplepost(regionobject).subscribe",{"_index":424,"title":{},"body":{"components/DemoComponent.html":{}}}],["this.sampleservice.sampleput(regionobject).subscribe",{"_index":433,"title":{},"body":{"components/DemoComponent.html":{}}}],["this.spinner.hide",{"_index":1020,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["this.spinner.show",{"_index":1013,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["this.toastr.error(message",{"_index":866,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.info(message",{"_index":869,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.success(message",{"_index":863,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.toastr.warning(message",{"_index":867,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.whicherror(notificationcode",{"_index":640,"title":{},"body":{"injectables/ErrorService.html":{}}}],["throwerror",{"_index":670,"title":{},"body":{"injectables/HttpService.html":{}}}],["throws",{"_index":373,"title":{},"body":{"classes/CustomValidator.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/NotificationService.html":{}}}],["toast",{"_index":852,"title":{},"body":{"injectables/NotificationService.html":{}}}],["toastr",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":841,"title":{},"body":{"injectables/NotificationService.html":{}}}],["token",{"_index":796,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["token_api",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":456,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/NotificationService.html":{}}}],["topleft",{"_index":837,"title":{},"body":{"injectables/NotificationService.html":{}}}],["topright",{"_index":838,"title":{},"body":{"injectables/NotificationService.html":{}}}],["transparent",{"_index":464,"title":{},"body":{"components/ErrorComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["true",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["truncate_length",{"_index":1160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslib",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":301,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/SampleService.html":{},"interceptors/httpInterceptor.html":{}}}],["twelve",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["two",{"_index":375,"title":{},"body":{"classes/CustomValidator.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"coverage.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":309,"title":{},"body":{"classes/CustomValidator.html":{}}}],["unauthorized",{"_index":567,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":307,"title":{},"body":{"classes/CustomValidator.html":{},"injectables/SampleService.html":{}}}],["unit",{"_index":1051,"title":{},"body":{"index.html":{}}}],["unsupported_media_type",{"_index":594,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["update",{"_index":434,"title":{},"body":{"components/DemoComponent.html":{}}}],["updatedby",{"_index":422,"title":{},"body":{"components/DemoComponent.html":{}}}],["updateddate",{"_index":423,"title":{},"body":{"components/DemoComponent.html":{}}}],["uppercase",{"_index":344,"title":{},"body":{"classes/CustomValidator.html":{}}}],["url",{"_index":233,"title":{},"body":{"classes/CommonUtil.html":{},"injectables/HttpService.html":{},"injectables/SampleService.html":{},"miscellaneous/variables.html":{}}}],["url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif",{"_index":483,"title":{},"body":{"components/ErrorComponent.html":{}}}],["urlsearchparams",{"_index":913,"title":{},"body":{"injectables/SampleService.html":{}}}],["urlstring",{"_index":1000,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["urlstring.indexof('/filterdata",{"_index":1022,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["urlstring.indexof('unreadcount",{"_index":1023,"title":{},"body":{"interceptors/httpInterceptor.html":{}}}],["use",{"_index":254,"title":{},"body":{"classes/CommonUtil.html":{},"index.html":{}}}],["use_proxy",{"_index":548,"title":{},"body":{"injectables/ErrorService.html":{},"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":810,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["user.id",{"_index":812,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["userinformationnotification",{"_index":515,"title":{},"body":{"injectables/ErrorService.html":{}}}],["userinformationnotification(notificationcode",{"_index":521,"title":{},"body":{"injectables/ErrorService.html":{}}}],["usernotification",{"_index":516,"title":{},"body":{"injectables/ErrorService.html":{}}}],["usernotification(notificationcode",{"_index":525,"title":{},"body":{"injectables/ErrorService.html":{}}}],["util",{"_index":763,"title":{},"body":{"injectables/LoadashService.html":{}}}],["validationresult",{"_index":277,"title":{"interfaces/ValidationResult.html":{}},"body":{"classes/CustomValidator.html":{},"interfaces/ValidationResult.html":{},"coverage.html":{}}}],["validatorfn",{"_index":281,"title":{},"body":{"classes/CustomValidator.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/CustomValidator.html":{},"injectables/LocalStorageService.html":{},"injectables/LocaleChangeService.html":{},"injectables/NotificationService.html":{},"injectables/SampleService.html":{},"miscellaneous/enumerations.html":{},"interceptors/httpInterceptor.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["variable",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1081,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["via",{"_index":1055,"title":{},"body":{"index.html":{}}}],["void",{"_index":147,"title":{},"body":{"components/AuthComponent.html":{},"classes/CommonUtil.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/ErrorComponent.html":{},"injectables/ErrorService.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["w",{"_index":329,"title":{},"body":{"classes/CustomValidator.html":{},"miscellaneous/variables.html":{}}}],["w+(?::\\w+)?@)?[^\\s/]+(?::\\d+)?(?:\\/[\\w",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warning",{"_index":839,"title":{},"body":{"injectables/NotificationService.html":{}}}],["warning(message",{"_index":850,"title":{},"body":{"injectables/NotificationService.html":{}}}],["website_url",{"_index":1163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website_url:'(https?://)?(http?://)?(ftp?://)?([\\\\da",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website_url:'/^[a",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["website_url:'^(http[s",{"_index":1162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whicherror",{"_index":517,"title":{},"body":{"injectables/ErrorService.html":{}}}],["whicherror(errorcode",{"_index":527,"title":{},"body":{"injectables/ErrorService.html":{}}}],["width",{"_index":467,"title":{},"body":{"components/ErrorComponent.html":{}}}],["window.location.hostname",{"_index":239,"title":{},"body":{"classes/CommonUtil.html":{}}}],["window.location.port",{"_index":241,"title":{},"body":{"classes/CommonUtil.html":{}}}],["window.location.protocol",{"_index":243,"title":{},"body":{"classes/CommonUtil.html":{}}}],["window.location.reload",{"_index":819,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["window.open(customurl",{"_index":257,"title":{},"body":{"classes/CommonUtil.html":{}}}],["window.open(url",{"_index":259,"title":{},"body":{"classes/CommonUtil.html":{}}}],["works",{"_index":148,"title":{},"body":{"components/AuthComponent.html":{},"classes/CustomValidator.html":{},"components/DemoComponent.html":{},"components/LoginComponent.html":{},"components/SampleComponent.html":{},"components/SignupComponent.html":{}}}],["yes",{"_index":668,"title":{},"body":{"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{}}}],["you're",{"_index":443,"title":{},"body":{"components/ErrorComponent.html":{}}}],["you\\'re",{"_index":502,"title":{},"body":{"components/ErrorComponent.html":{}}}],["z",{"_index":458,"title":{},"body":{"components/ErrorComponent.html":{},"miscellaneous/variables.html":{}}}],["z.]{2,6})[/\\\\w",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":323,"title":{},"body":{"classes/CustomValidator.html":{},"miscellaneous/variables.html":{}}}],["z@~`!@#$%^&*()_",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":1105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z][a",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":1111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2,4}\\b$/i",{"_index":326,"title":{},"body":{"classes/CustomValidator.html":{}}}],["z]{2,5}[.]{0,1",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":1109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ErrorModule.html":{},"modules/SampleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Demo-structure-version-twelve'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Demo-structure-version-twelve';\n}\n\n    \n\n    \n        \n\n     Spinner \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     Spinner '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nAppModule -->\n\nLocalStorageService->AppModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nAppModule -->\n\nNotificationService->AppModule\n\n\n\n\n\nhttpInterceptor\n\nhttpInterceptor\n\nAppModule -->\n\nhttpInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpService\n                        \n                        \n                            LocalStorageService\n                        \n                        \n                            NotificationService\n                        \n                        \n                            httpInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ToastrModule } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './core/services/http-services/http.service';\nimport { httpInterceptor } from './core/services/interceptor/httpInterceptor';\nimport { LocalStorageService } from './core/services/localstorage-service/localstorage.service';\nimport { NotificationService } from './core/services/notification/notification.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    NotificationService,\n    LocalStorageService,\n    HttpService,\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: httpInterceptor,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'auth', data: { title: 'auth' } },\n  { path: 'auth', loadChildren: () => \"import('./modules/auth/auth.module').then(auth => auth.AuthModule)\" },\n  { path: 'sample', loadChildren: () => \"import('./modules/sample/sample.module').then(m => m.SampleModule)\" },\n  {\n    path: '404',\n    loadChildren: () => \"import('./modules/error/error.module').then(m => m.ErrorModule)\"\n  },\n  { path: '**', redirectTo: '/404' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        auth works!\n\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'auth works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/gaurds/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/gaurds/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/gaurds/auth.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { LocalStorageService } from '../services/localstorage-service/localstorage.service';\n\n@Injectable()\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private localStorageService: LocalStorageService\n  ) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.localStorageService.getItem('user')) {\n      return true;\n    }\n    // not logged in than redirect to login page\n    this.router.navigate(['login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_declarations\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { AuthComponent } from './auth.component';\nimport { AuthRoutingModule } from './auth.routing';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\n\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule\n  ]\n})\n\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\n\n\nexport const AUTH_ROUTES: Routes = [\n    {\n        path: '',\n        component: AuthComponent,\n        children: [\n            {\n                path: 'login',\n                component: LoginComponent\n            },\n            {\n                path: 'signup',\n                component: SignupComponent\n            }\n        ]\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(AUTH_ROUTES)],\n    exports: [RouterModule]\n})\n\nexport class AuthRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/services/auth-services/auth.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, storageService: LocalStorageService, router: Router, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/services/auth-services/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ErrorService } from 'src/app/core/services/error/error.service';\nimport { HttpService } from 'src/app/core/services/http-services/http.service';\nimport { LocalStorageService } from 'src/app/core/services/localstorage-service/localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private httpService: HttpService,\n    private storageService: LocalStorageService,\n    private router: Router,\n    private errorService: ErrorService\n  ) { }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonUtil.html":{"url":"classes/CommonUtil.html","title":"class - CommonUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/util/CommonUtil.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createExternalURLForJob\n                            \n                            \n                                    Static\n                                createExternalURLForProfile\n                            \n                            \n                                    Static\n                                createExternalURLForProject\n                            \n                            \n                                    Static\n                                getApiEndPointPath\n                            \n                            \n                                    Static\n                                getBaseURL\n                            \n                            \n                                    Static\n                                openNewTab\n                            \n                            \n                                    Static\n                                openNewTabForExternalurl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createExternalURLForJob\n                        \n                    \n                \n            \n            \n                \n                    \n                    createExternalURLForJob(jobTitle, jobId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobTitle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jobId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createExternalURLForProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    createExternalURLForProfile(name, id, route)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    route\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createExternalURLForProject\n                        \n                    \n                \n            \n            \n                \n                    \n                    createExternalURLForProject(projectTitle, projectId)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    projectTitle\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    projectId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getApiEndPointPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    getApiEndPointPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getBaseURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBaseURL()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        openNewTab\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNewTab(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        openNewTabForExternalurl\n                        \n                    \n                \n            \n            \n                \n                    \n                    openNewTabForExternalurl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CommonUtil.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from 'src/environments/environment';\n\nexport class CommonUtil {\n\n    static createExternalURLForProject(projectTitle, projectId) {\n\n        const host = window.location.hostname;\n        const port = window.location.port;\n        const protocol = window.location.protocol;\n\n        const Url = `${protocol}//${host}:${port}/#/preview/project-external-detail?title=${projectTitle}&id=${projectId}`;\n        return Url;\n    }\n\n    static createExternalURLForProfile(name, id, route) {\n\n        const host = window.location.hostname;\n        const port = window.location.port;\n        const protocol = window.location.protocol;\n\n        const Url = `${protocol}//${host}:${port}/#/preview/${route}?name=${name}&id=${id}`;\n        return Url;\n    }\n\n    static createExternalURLForJob(jobTitle, jobId) {\n\n        const host = window.location.hostname;\n        const port = window.location.port;\n        const protocol = window.location.protocol;\n\n        const Url = `${protocol}//${host}:${port}/#/preview/job-external-detail?title=${jobTitle}&id=${jobId}`;\n        return Url;\n    }\n\n    static openNewTab(url: string) {\n        const customUrl = '#' + url;\n        // url = '/preview/worker-profile-detail?user=03';\n        // use like in respective components CommonUtil.openWindow(\"/preview/worker-profile-detail?user=03\");\n        window.open(customUrl, '_blank');\n    }\n\n    static openNewTabForExternalurl(url: string) {\n        window.open(url, '_blank');\n    }\n\n    static getApiEndPointPath(): string {\n        return environment.apiEndPoint;\n    }\n\n    static getBaseURL(): string {\n        return environment.baseURL;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidator.html":{"url":"classes/CustomValidator.html","title":"class - CustomValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/util/CustomValidator.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clientEmailValidator\n                            \n                            \n                                    Static\n                                emailValidator\n                            \n                            \n                                    Static\n                                isNumberCheck\n                            \n                            \n                                    Static\n                                markFormGroupTouched\n                            \n                            \n                                    Static\n                                MobilePhoneValidator\n                            \n                            \n                                    Static\n                                numericValidation\n                            \n                            \n                                    Static\n                                passwordConfirming\n                            \n                            \n                                    Static\n                                passWordValidator\n                            \n                            \n                                    Static\n                                required\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        clientEmailValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    clientEmailValidator(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        emailValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    emailValidator(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNumberCheck\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNumberCheck()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ValidatorFn\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        markFormGroupTouched\n                        \n                    \n                \n            \n            \n                \n                    \n                    markFormGroupTouched(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        MobilePhoneValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    MobilePhoneValidator(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        numericValidation\n                        \n                    \n                \n            \n            \n                \n                    \n                    numericValidation(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        passwordConfirming\n                        \n                    \n                \n            \n            \n                \n                    \n                    passwordConfirming(c: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        passWordValidator\n                        \n                    \n                \n            \n            \n                \n                    \n                    passWordValidator(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        required\n                        \n                    \n                \n            \n            \n                \n                    \n                    required(control: FormControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/util/CustomValidator.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationResult\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\nimport { COMMON_CONSTANTS } from '../../constants/CommonConstants';\nimport { ValidationResult } from './ValidationResult';\n\n\nexport class CustomValidator {\n\n\n    static required(control: FormControl): ValidationResult {\n        // tslint:disable-next-line: max-line-length\n        if ((control.value === undefined || control.value === null || (control.value === '' || (typeof (control.value) === 'string' && control.value.trim() === '')))) {\n            return { required: true };\n        }\n        return null;\n    }\n\n    static numericValidation(control: FormControl): ValidationResult {\n        const NUMERIC_REGEXP = /^[0-9]*$/i;\n        if (control.value !== '' && !NUMERIC_REGEXP.test(control.value)) {\n            return { incorrectNumericFormat: true };\n        }\n        return null;\n    }\n    static isNumberCheck(): ValidatorFn {\n        return (c: AbstractControl): { [key: string]: boolean } | null => {\n            const numbers = /^[.\\d]+$/.test(c.value) ? +c.value : NaN;\n            if (numbers !== numbers) {\n                return { value: true };\n            }\n            return null;\n        };\n    }\n    static emailValidator(control: FormControl): ValidationResult {\n        const EMAIL_REGEXP = /^\\b[A-Z0-9._%-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}\\b$/i;\n        if (control.value !== '' && !EMAIL_REGEXP.test(control.value)) {\n            return { incorrectEmailFormat: true };\n        }\n        return null;\n    }\n    static clientEmailValidator(control: FormControl): ValidationResult {\n        // tslint:disable-next-line: max-line-length\n        const EMAIL_REGEXP = /^([\\w-\\.]+@(?!gmail.com)(?!yahoo.com)(?!aol.com)(?!outlook.com)(?!zoho.com)(?!mail.com)(?!protonmail.com)(?!icloud.com)(?!gmx.com)(?!yandex.com)(?!hubspot.com)(?!hotmail.com)(?!yahoo.co.in)([\\w-]+\\.)+[\\w-]{2,4})?$/i;\n        if (control.value !== '' && !EMAIL_REGEXP.test(control.value)) {\n            return { incorrectEmailFormat: true };\n        }\n        return null;\n    }\n\n    static MobilePhoneValidator(control: FormControl): ValidationResult {\n        const MOBILEPHONE_REGEXP = /^[(]?\\d{3}[)]?[(\\s)?.-]\\d{3}[\\s.-]\\d{4}$/g;\n        if (control.value !== '' && !MOBILEPHONE_REGEXP.test(control.value)) {\n            return { incorrectMobilePhoneFormat: true };\n        }\n        return null;\n    }\n\n    static passWordValidator(control: FormControl): ValidationResult {\n        const PASSWORD_REGEXP = COMMON_CONSTANTS.PASSWORD_REGX;\n        // should contain one digit, one lowercase, one uppercase, one special charater and at between 6 to 20 character long\n        if (control.value !== '' && !control.value.match(PASSWORD_REGEXP)) {\n            return { incorrectPasswordFormat: true };\n        }\n        return null;\n    }\n\n    static passwordConfirming(c: FormControl): ValidationResult {\n        let validationResult: ValidationResult;\n        if (c.get('password') !== null && c.get('confirmPassword') !== null) {\n            validationResult = (c.get('password').value === '') ? { passwordRequired: true } : null;\n            if (validationResult === null) {\n                validationResult = (c.get('password').value !== c.get('confirmPassword').value) ? { misMatchConfirmPassword: true } : null;\n            }\n        }\n        return validationResult;\n    }\n\n    static markFormGroupTouched(form: FormGroup): void {\n        Object.values(form.controls).forEach(control => {\n            control.markAsTouched();\n            control.markAsDirty();\n\n            if ((control as any).controls) {\n                this.markFormGroupTouched(control as FormGroup);\n            }\n        });\n    }\n\n    // static passwordConfirming1(c: FormControl): ValidationResult {\n    //     let validationResult: ValidationResult;\n    //     if (c != null) {\n    //         if (c.value !== null && c.root.get('password').value !== null) {\n    //             validationResult = (c.root.get('password').value === '') ? { passwordRequired: true } : null;\n    //             if (validationResult === null) {\n    //                 validationResult = (c.root.get('password').value !== c.value) ? { misMatchConfirmPassword: true } : null;\n    //             }\n    //         }\n    //     }\n    //     return validationResult;\n    // }\n\n    // static passwordsMatch(password: string, confirmedPassword: string) {\n    //     return (control: FormControl): { [s: string]: boolean } => {\n    //         console.log(password, confirmedPassword);\n    //         //if I change this condition to === it throws the error if the\n    //         //  two fields are the same, so this part works\n    //         if (password !== confirmedPassword) {\n    //             return { 'passwordMismatch': true }\n    //         } else {\n    //             //it always gets here no matter what\n    //             return null;\n    //         }\n    //     }\n    // }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DemoComponent.html":{"url":"components/DemoComponent.html","title":"component - DemoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DemoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sample/components/demo/demo.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-demo\n            \n\n            \n                styleUrls\n                ./demo.component.css\n            \n\n\n\n            \n                templateUrl\n                ./demo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteData\n                            \n                            \n                                getSampleData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                postData\n                            \n                            \n                                putData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sampleService: SampleService, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sample/components/demo/demo.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sampleService\n                                                  \n                                                        \n                                                                        SampleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteData\n                        \n                    \n                \n            \n            \n                \ndeleteData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/components/demo/demo.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSampleData\n                        \n                    \n                \n            \n            \n                \ngetSampleData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/components/demo/demo.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/components/demo/demo.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postData\n                        \n                    \n                \n            \n            \n                \npostData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/components/demo/demo.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putData\n                        \n                    \n                \n            \n            \n                \nputData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/components/demo/demo.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ErrorService } from 'src/app/core/services/error/error.service';\nimport { SampleService } from '../../services/sample-services/sample.service';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor(\n    private sampleService: SampleService,\n    private errorService: ErrorService) {\n  }\n\n  ngOnInit() {\n    this.getSampleData();\n  }\n\n  getSampleData() {\n    this.sampleService.sampleGet().subscribe(\n      (data: any) => {\n        console.log(data);\n        if (data.statusCode === '200' && data.message === 'OK') {\n          this.errorService.userNotification(data.statusCode, 'Get Data');\n        }\n      },\n      (err: Error) => {\n        console.error(err);\n      }\n    );\n  }\n\n  postData() {\n    const regionObject = {\n      createdBy: 'string',\n      createdDate: '2021-10-08T09:53:34.718Z',\n      enable: true,\n      id: 'string',\n      isEnable: true,\n      name: 'custom region',\n      updatedBy: 'string',\n      updatedDate: '2021-10-08T09:53:34.718Z'\n    };\n    this.sampleService.samplePost(regionObject).subscribe(\n      (data: any) => {\n        console.log(data);\n        if (data.statusCode === '200' && data.message === 'OK') {\n          this.errorService.userNotification(data.statusCode, 'Post Data');\n        }\n      },\n      (err: Error) => {\n        console.error(err);\n      }\n    );\n  }\n\n\n  putData() {\n    const regionObject = {\n      createdBy: '1',\n      createdDate: '2021-10-08T04:25:40.000+00:00',\n      enable: true,\n      id: '8addea44-4f9e-4888-b629-53fa19046350',\n      isEnable: true,\n      name: '1',\n      updatedBy: '1',\n      updatedDate: '2021-10-08T04:25:40.000+00:00'\n    };\n    this.sampleService.samplePut(regionObject).subscribe(\n      (data: any) => {\n        console.log(data);\n        if (data.statusCode === '200' && data.message === 'OK') {\n          this.errorService.userNotification(data.statusCode, 'Update Data');\n        }\n      },\n      (err: Error) => {\n        console.error(err);\n      }\n    );\n  }\n\n\n  deleteData() {\n    const regionObject = {\n      id: '8addea44-4f9e-4888-b629-53fa19046350',\n    };\n\n    this.sampleService.sampleDelete(regionObject).subscribe(\n      (data: any) => {\n        console.log(data);\n        if (data.statusCode === '200' && data.message === 'OK') {\n          this.errorService.userNotification(data.statusCode, 'Delete Data');\n        }\n      },\n      (err: Error) => {\n        console.error(err);\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        demo works!\n\n    \n\n    \n                \n                    ./demo.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'demo works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DemoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/error/error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                styleUrls\n                ./error.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/error/error.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/error/error.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        404\n                    \n\n                    \n                        \n                            Look like you're lost\n                        \n\n                        the page you are looking for not avaible!\n\n                        Go to Home\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./error.component.css\n                \n                .alert {\n    position: absolute;\n    padding: 0.75rem 1.25rem;\n    margin-top: 3%;\n    z-index: 200;\n    margin-bottom: 1rem;\n    border: 1px solid transparent;\n    border-radius: 0.25rem;\n    width: 35%;\n    margin-left: 65%;\n}\n\n/*======================\n    404 page\n=======================*/\n\n.page_404 {\n    padding: 40px 0;\n    background: #fff;\n    font-family: \"Arvo\", serif;\n}\n\n.page_404 img {\n    width: 100%;\n}\n\n.four_zero_four_bg {\n    background-image: url(https://cdn.dribbble.com/users/285475/screenshots/2083086/dribbble_1.gif);\n    height: 400px;\n    background-position: center;\n}\n\n.four_zero_four_bg h1 {\n    font-size: 80px;\n}\n\n.four_zero_four_bg h3 {\n    font-size: 80px;\n}\n\n.link_404 {\n    color: #fff !important;\n    padding: 10px 20px;\n    background: #39ac31;\n    margin: 20px 0;\n    display: inline-block;\n}\n.contant_box_404 {\n    margin-top: -50px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    404                                                                                            Look like you\\'re lost                                                the page you are looking for not avaible!                        Go to Home                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_ErrorModule_declarations\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorComponent->ErrorModule\n\n\n\n\n\nErrorRoutingModule\n\nErrorRoutingModule\n\nErrorModule -->\n\nErrorRoutingModule->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/error/error.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ErrorRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ErrorComponent } from './error.component';\nimport { ErrorRoutingModule } from './error.routing';\n\n\n\n@NgModule({\n  declarations: [ErrorComponent],\n  imports: [\n    CommonModule,\n    ErrorRoutingModule\n  ]\n})\nexport class ErrorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorRoutingModule.html":{"url":"modules/ErrorRoutingModule.html","title":"module - ErrorRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/error/error.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { ErrorComponent } from './error.component';\n\n\nexport const ERROR_ROUTES: Routes = [\n    { path: '', component: ErrorComponent },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(ERROR_ROUTES)],\n    exports: [RouterModule]\n})\n\nexport class ErrorRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorService.html":{"url":"injectables/ErrorService.html","title":"injectable - ErrorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/error/error.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                userInformationNotification\n                            \n                            \n                                userNotification\n                            \n                            \n                                whichError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/error/error.service.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        userInformationNotification\n                        \n                    \n                \n            \n            \n                \nuserInformationNotification(notificationCode: any, notificationMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/error/error.service.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationCode\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    notificationMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userNotification\n                        \n                    \n                \n            \n            \n                \nuserNotification(notificationCode: any, notificationMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/error/error.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationCode\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    notificationMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        whichError\n                        \n                    \n                \n            \n            \n                \nwhichError(errorCode: any, errorMessage: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/error/error.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorCode\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    errorMessage\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { NotificationService } from '../notification/notification.service';\n\nexport enum Codesss {\n  COUNTINUE = 100,\n  SWITCHING_PROTOCOL = 101\n}\n\nexport enum RedirectionCodes {\n  MULTIPLE_CHOICE = 300,\n  MOVED_PERMANANTLY = 301,\n  MOVED_TEMPORARY = 302,\n  SEE_OTHER = 303,\n  NOT_MODIFIED = 304,\n  USE_PROXY = 305,\n}\n\nexport enum ServerErrorCodes {\n\n  SERVER_ERROR = 500,\n  NOT_IMPLEMENTED = 501,\n  BAD_GATEWAY = 502,\n  OUT_OF_RESOURCES = 503,\n  GATEWAY_TIME_OUT = 504,\n  HTTP_VERSION_NOT_SUPPORTED = 505,\n}\n\nexport enum ClientErrorCodes {\n  SERVER_SHUTDOWN = 0,\n  BAD_REQUEST = 400,\n  UNAUTHORIZED = 401,\n  PAYMENT_REQUIRED = 402,\n  FORBIDDEN = 403,\n  NOT_FOUND = 404,\n  METHOD_NOT_ALLOWED = 405,\n  NOT_ACCEPTABLE = 406,\n  PROXY_AUTHENTICATION_REQUIRED = 407,\n  REQUEST_TIME_OUT = 408,\n  CONFLICT = 409,\n  GONE = 410,\n  LENGTH_REQUIRED = 411,\n  PRECONDITION_FAILED = 412,\n  REQUEST_ENTITY_TOO_LARGE = 413,\n  REQUEST_URL_TOO_LARGE = 414,\n  UNSUPPORTED_MEDIA_TYPE = 415,\n}\n\nexport enum SuccessCodes {\n  OK = 200,\n  CREATED = 201,\n  ACCEPTED = 202,\n  PARTIAL_INFORMATION = 203,\n  NO_CONTENT = 204,\n  RESET_CONTENT = 205,\n  PARTIAL_CONTENT = 206,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n\n  constructor(private notification: NotificationService) { }\n\n  whichError(errorCode: any, errorMessage: any) {\n    errorCode = parseInt(errorCode);\n    switch (errorCode) {\n      case ClientErrorCodes.BAD_REQUEST:\n        this.notification.error(errorMessage, 'BAD_REQUEST');\n        break;\n      case ClientErrorCodes.UNAUTHORIZED:\n        this.notification.error(errorMessage, 'UNAUTHORIZED');\n        break;\n      case ClientErrorCodes.PAYMENT_REQUIRED:\n        this.notification.error(errorMessage, 'PAYMENT_REQUIRED');\n        break;\n      case ClientErrorCodes.FORBIDDEN:\n        this.notification.error(errorMessage, 'FORBIDDEN');\n        break;\n      case ClientErrorCodes.NOT_FOUND:\n        this.notification.error(errorMessage, 'NOT_FOUND');\n        break;\n      case ClientErrorCodes.METHOD_NOT_ALLOWED:\n        this.notification.error(errorMessage, 'METHOD_NOT_ALLOWED');\n        break;\n      case ClientErrorCodes.NOT_ACCEPTABLE:\n        this.notification.error(errorMessage, 'NOT_ACCEPTABLE');\n        break;\n      case ClientErrorCodes.PROXY_AUTHENTICATION_REQUIRED:\n        this.notification.error(errorMessage, 'PROXY_AUTHENTICATION_REQUIRED');\n        break;\n      case ClientErrorCodes.REQUEST_TIME_OUT:\n        this.notification.error(errorMessage, 'REQUEST_TIME_OUT');\n        break;\n      case ClientErrorCodes.CONFLICT:\n        this.notification.error(errorMessage, 'CONFLICT');\n        break;\n      case ClientErrorCodes.GONE:\n        this.notification.error(errorMessage, 'GONE');\n        break;\n      case ClientErrorCodes.LENGTH_REQUIRED:\n        this.notification.error(errorMessage, 'LENGTH_REQUIRED');\n        break;\n      case ClientErrorCodes.PRECONDITION_FAILED:\n        this.notification.error(errorMessage, 'PRECONDITION_FAILED');\n        break;\n      case ClientErrorCodes.REQUEST_ENTITY_TOO_LARGE:\n        this.notification.error(errorMessage, 'REQUEST_ENTITY_TOO_LARGE');\n        break;\n      case ClientErrorCodes.REQUEST_URL_TOO_LARGE:\n        this.notification.error(errorMessage, 'REQUEST_URL_TOO_LARGE');\n        break;\n      case ClientErrorCodes.UNSUPPORTED_MEDIA_TYPE:\n        this.notification.error(errorMessage, 'UNSUPPORTED_MEDIA_TYPE');\n        break;\n\n      default:\n        this.notification.error(errorMessage, 'SERVER_SHUTDOWN');\n        break;\n    }\n  }\n\n  userNotification(notificationCode: any, notificationMessage: any) {\n    notificationCode = parseInt(notificationCode);\n    switch (notificationCode) {\n      case SuccessCodes.OK:\n        this.notification.success(notificationMessage, 'Ok');\n        break;\n      case SuccessCodes.CREATED:\n        this.notification.success(notificationMessage, 'CREATED');\n        break;\n      case SuccessCodes.ACCEPTED:\n        this.notification.success(notificationMessage, 'ACCEPTED');\n        break;\n      case SuccessCodes.PARTIAL_INFORMATION:\n        this.notification.success(notificationMessage, 'PARTIAL_INFORMATION');\n        break;\n      case SuccessCodes.NO_CONTENT:\n        this.notification.success(notificationMessage, 'NO_CONTENT');\n        break;\n      case SuccessCodes.RESET_CONTENT:\n        this.notification.success(notificationMessage, 'RESET_CONTENT');\n        break;\n      case SuccessCodes.PARTIAL_CONTENT:\n        this.notification.success(notificationMessage, 'PARTIAL_CONTENT');\n        break;\n\n      default:\n        this.whichError(notificationCode, notificationMessage);\n        break;\n    }\n  }\n\n  userInformationNotification(notificationCode: any, notificationMessage: any) {\n    notificationCode = parseInt(notificationCode);\n    switch (notificationCode) {\n      case RedirectionCodes.MOVED_PERMANANTLY:\n        this.notification.info('information notificationMessage', 'Moved Permanantly');\n        break;\n      default:\n        alert('Unknown Success code');\n        break;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http-services/http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorNotification\n                            \n                            \n                                handleError\n                            \n                            \n                                requestCall\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, error: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http-services/http.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        errorNotification\n                        \n                    \n                \n            \n            \n                \n                    \n                    errorNotification(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/http-services/http.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: HttpErrorResponse, self)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/http-services/http.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestCall\n                        \n                    \n                \n            \n            \n                \nrequestCall(api: string, method: ApiMethodName, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/http-services/http.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    api\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    method\n                                    \n                                                ApiMethodName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ApiMethodName } from '../../constants/ApiMethodName';\nimport { ErrorService } from '../error/error.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(\n    private http: HttpClient,\n    private error: ErrorService\n  ) { }\n\n  requestCall(api: string, method: ApiMethodName, data?: any): any {\n\n    const url = `${environment.apiEndPoint}${api}`;\n\n    let response: Observable;\n\n    switch (method) {\n      case ApiMethodName.GET:\n        return response = this.http.get(`${url}`).pipe(\n          map((res: any) => {\n            this.errorNotification(res);\n            return res;\n          }),\n          catchError(async (err) => await this.handleError(err, this)));\n        break;\n\n      case ApiMethodName.POST:\n        return response = this.http.post(`${url}`, data).pipe(\n          map((res: any) => {\n            this.errorNotification(res);\n            return res;\n          }),\n          catchError(async (err) => await this.handleError(err, this)));\n        break;\n\n      case ApiMethodName.PUT:\n        return response = this.http.put(`${url}`, data).pipe(\n          map((res: any) => {\n            this.errorNotification(res);\n            return res;\n          }),\n          catchError(async (err) => await this.handleError(err, this)));\n        break;\n\n      case ApiMethodName.DELETE:\n        return response = this.http.delete(`${url}`, data).pipe(\n          map((res: any) => {\n            this.errorNotification(res);\n            return res;\n          }),\n          catchError(async (err) => await this.handleError(err, this)));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  private errorNotification(res: any) {\n    if (res.statusCode !== '200') {\n      if (res.message.length > 4) {\n        this.error.userNotification(res.statusCode, res.message);\n      } else {\n        this.error.userNotification(res.statusCode, res.errorCode);\n      }\n    }\n  }\n\n  handleError(error: HttpErrorResponse, self: this): any {\n    console.log('Error Service', error);\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error ocured', error.error.message);\n    } else {\n      this.error.whichError(error.status, error.message);\n      return throwError({ error: error.message, status: error.status });\n    }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadashService.html":{"url":"injectables/LoadashService.html","title":"injectable - LoadashService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoadashService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/loadash/loadash.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEmpty\n                                \n                                \n                                    isArray\n                                \n                                \n                                    isRegExp\n                                \n                                \n                                    isDate\n                                \n                                \n                                    isError\n                                \n                                \n                                    isBoolean\n                                \n                                \n                                    isBuffer\n                                \n                                \n                                    isFunction\n                                \n                                \n                                    isNull\n                                \n                                \n                                    isNullOrUndefined\n                                \n                                \n                                    isNumber\n                                \n                                \n                                    isObject\n                                \n                                \n                                    isPrimitive\n                                \n                                \n                                    isString\n                                \n                                \n                                    isSymbol\n                                \n                                \n                                    isUndefined\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/loadash/loadash.service.ts:24\n                            \n                        \n\n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEmpty\n                    \n                \n\n                \n                    \n                        getisEmpty()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:28\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isArray\n                    \n                \n\n                \n                    \n                        getisArray()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:36\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isRegExp\n                    \n                \n\n                \n                    \n                        getisRegExp()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:40\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDate\n                    \n                \n\n                \n                    \n                        getisDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isError\n                    \n                \n\n                \n                    \n                        getisError()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isBoolean\n                    \n                \n\n                \n                    \n                        getisBoolean()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:50\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isBuffer\n                    \n                \n\n                \n                    \n                        getisBuffer()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:54\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isFunction\n                    \n                \n\n                \n                    \n                        getisFunction()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:58\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isNull\n                    \n                \n\n                \n                    \n                        getisNull()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isNullOrUndefined\n                    \n                \n\n                \n                    \n                        getisNullOrUndefined()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:66\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isNumber\n                    \n                \n\n                \n                    \n                        getisNumber()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:70\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isObject\n                    \n                \n\n                \n                    \n                        getisObject()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:74\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isPrimitive\n                    \n                \n\n                \n                    \n                        getisPrimitive()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:78\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isString\n                    \n                \n\n                \n                    \n                        getisString()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:82\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isSymbol\n                    \n                \n\n                \n                    \n                        getisSymbol()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:86\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isUndefined\n                    \n                \n\n                \n                    \n                        getisUndefined()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/loadash/loadash.service.ts:90\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { isEmpty } from 'rxjs/operators';\nimport {\n  isArray,\n  isRegExp,\n  isDate,\n  isError,\n  isBoolean,\n  isBuffer,\n  isFunction,\n  isNull,\n  isNullOrUndefined,\n  isNumber,\n  isObject,\n  isPrimitive,\n  isString,\n  isSymbol,\n  isUndefined,\n} from 'util';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadashService {\n\n  constructor() { }\n\n  get isEmpty() {\n    return isEmpty;\n  }\n\n  // get forEach() {\n  //   return forEach;\n  // }\n\n  get isArray() {\n    return isArray;\n  }\n\n  get isRegExp() {\n    return isRegExp;\n  }\n  get isDate() {\n    return isDate;\n  }\n  get isError() {\n    return isError;\n  }\n\n  get isBoolean() {\n    return isBoolean;\n  }\n\n  get isBuffer() {\n    return isBuffer;\n  }\n\n  get isFunction() {\n    return isFunction;\n  }\n\n  get isNull() {\n    return isNull;\n  }\n\n  get isNullOrUndefined() {\n    return isNullOrUndefined;\n  }\n\n  get isNumber() {\n    return isNumber;\n  }\n\n  get isObject() {\n    return isObject;\n  }\n\n  get isPrimitive() {\n    return isPrimitive;\n  }\n\n  get isString() {\n    return isString;\n  }\n\n  get isSymbol() {\n    return isSymbol;\n  }\n\n  get isUndefined() {\n    return isUndefined;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/localstorage-service/localstorage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getheme\n                            \n                            \n                                getItem\n                            \n                            \n                                getLoginUserId\n                            \n                            \n                                getLoginUserObject\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                logout\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                            \n                                setTheme\n                            \n                            \n                                    Public\n                                setToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getheme\n                        \n                    \n                \n            \n            \n                \ngetheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string, defaultValue?: any, storageType?: boolean, componentName?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    storageType\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    componentName\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoginUserId\n                        \n                    \n                \n            \n            \n                \ngetLoginUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoginUserObject\n                        \n                    \n                \n            \n            \n                \ngetLoginUserObject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken(key: string, defaultValue?: any, storageType?: boolean, componentName?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    storageType\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    componentName\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: any, storageType?: boolean, componentName?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storageType\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    componentName\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(themeName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    themeName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setToken(key: string, token: any, defaultValue?: any, storageType?: boolean, componentName?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/localstorage-service/localstorage.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    storageType\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    componentName\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorageService {\n\n    setItem(key: string, value: any, storageType?: boolean, componentName?: any) {\n        if (storageType) {\n            localStorage.setItem(key, JSON.stringify(value));\n        } else {\n            sessionStorage.setItem(key, JSON.stringify(value));\n        }\n    }\n\n    getItem(key: string, defaultValue?: any, storageType?: boolean, componentName?: any): any {\n        if (storageType) {\n            const localStorageObject = localStorage.getItem(key)\n            if (localStorageObject) {\n                return JSON.parse(localStorageObject);\n            } else {\n                return defaultValue;\n            }\n        } else {\n            const sessionStorageObject = sessionStorage.getItem(key)\n            if (sessionStorageObject) {\n                return JSON.parse(sessionStorageObject);\n            } else {\n                return defaultValue;\n            }\n        }\n    }\n\n    public setToken(key: string, token: any, defaultValue?: any, storageType?: boolean, componentName?: any): any {\n        if (storageType) {\n            localStorage.setItem(key, JSON.stringify(token));\n        } else {\n            sessionStorage.setItem(key, JSON.stringify(token));\n        }\n    }\n\n    public getToken(key: string, defaultValue?: any, storageType?: boolean, componentName?: any): any {\n        if (storageType) {\n            const localStorageObject = localStorage.getItem(key)\n            if (localStorageObject) {\n                return JSON.parse(localStorageObject);\n            }\n        } else {\n            const sessionStorageObject = sessionStorage.getItem(key)\n            if (sessionStorageObject) {\n                return JSON.parse(sessionStorageObject);\n            }\n        }\n    }\n\n    removeItem(key: string): any {\n        localStorage.removeItem(key);\n        sessionStorage.removeItem(key);\n    }\n\n    getLoginUserId(): any {\n        const user = this.getItem('user');\n        return user ? user.id : '';\n    }\n\n    getLoginUserObject(): any {\n        const user = this.getItem('user');\n        return user;\n    }\n\n    getheme(): any {\n        return this.getItem('iconic_worker_theme');\n    }\n\n    setTheme(themeName: string): void {\n        sessionStorage.setItem('iconic_worker_theme', JSON.stringify(themeName));\n    }\n\n    logout(): any {\n        sessionStorage.clear();\n        localStorage.clear();\n        setTimeout(() => {\n            window.location.reload();\n        }, 500);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaleChangeService.html":{"url":"injectables/LocaleChangeService.html","title":"injectable - LocaleChangeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocaleChangeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/localstorage-service/locale-change.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                selectedLang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/localstorage-service/locale-change.service.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLang\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('en')\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/localstorage-service/locale-change.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocaleChangeService {\n\n  constructor() { }\n\n  selectedLang = new BehaviorSubject('en');\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/components/login/login.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/login/login.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    // private \n  ) { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        login works!\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'login works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/notification/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bottomLeft\n                            \n                            \n                                bottomRight\n                            \n                            \n                                topLeft\n                            \n                            \n                                topRight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                success\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/notification/notification.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification/notification.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification/notification.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification/notification.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warning\n                        \n                    \n                \n            \n            \n                \nwarning(message: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/notification/notification.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bottomLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'toast-bottom-left'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification/notification.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bottomRight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'toast-bottom-right'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification/notification.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'toast-top-left'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification/notification.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        topRight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'toast-top-right'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/notification/notification.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\n// Reference link\n// https://blog.jscrambler.com/how-to-create-angular-toastr-notifications/\nexport class NotificationService {\n\n  topRight = 'toast-top-right';\n  topLeft = 'toast-top-left';\n  bottomRight = 'toast-bottom-right';\n  bottomLeft = 'toast-bottom-left';\n\n  constructor(private toastr: ToastrService) { }\n\n  success(message: string, title: string) {\n    if (title === null || title === '') {\n      title = 'Success';\n    }\n    this.toastr.success(message, title, { positionClass: this.bottomLeft });\n  }\n\n  error(message: string, title: string) {\n    if (title === null || title === '') {\n      title = 'Error';\n    }\n    this.toastr.error(message, title, { positionClass: this.bottomLeft });\n  }\n\n  warning(message: string, title: string) {\n    if (title === null || title === '') {\n      title = 'Warning';\n    }\n    this.toastr.warning(message, title, { positionClass: this.bottomLeft });\n  }\n\n  info(message: string, title: string) {\n    if (title === null || title === '') {\n      title = 'Information';\n    }\n    this.toastr.info(message, title, { positionClass: this.bottomLeft });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleComponent.html":{"url":"components/SampleComponent.html","title":"component - SampleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SampleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sample/sample.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sample\n            \n\n            \n                styleUrls\n                ./sample.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sample.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sample/sample.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/sample.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sample',\n  templateUrl: './sample.component.html',\n  styleUrls: ['./sample.component.css']\n})\nexport class SampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        sample works!\n\n    \n\n    \n                \n                    ./sample.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sample works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SampleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleModule.html":{"url":"modules/SampleModule.html","title":"module - SampleModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_declarations\n\n\n\ncluster_SampleModule_imports\n\n\n\n\nDemoComponent\n\nDemoComponent\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nDemoComponent->SampleModule\n\n\n\n\n\nSampleComponent\n\nSampleComponent\n\nSampleModule -->\n\nSampleComponent->SampleModule\n\n\n\n\n\nSampleRoutingModule\n\nSampleRoutingModule\n\nSampleModule -->\n\nSampleRoutingModule->SampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sample/sample.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DemoComponent\n                        \n                        \n                            SampleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SampleRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DemoComponent } from './components/demo/demo.component';\nimport { SampleComponent } from './sample.component';\nimport { SampleRoutingModule } from './sample.routing';\n\n\n\n@NgModule({\n  declarations: [\n    SampleComponent,\n    DemoComponent\n  ],\n  imports: [\n    CommonModule,\n    SampleRoutingModule\n  ]\n})\nexport class SampleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SampleRoutingModule.html":{"url":"modules/SampleRoutingModule.html","title":"module - SampleRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SampleRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sample/sample.routing.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DemoComponent } from './components/demo/demo.component';\nimport { SampleComponent } from './sample.component';\n\nexport const SAMPLE_ROUTES: Routes = [\n    {\n        path: '',\n        component: SampleComponent,\n        children: [\n            {\n                path: 'demo',\n                component: DemoComponent\n            }\n        ]\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(SAMPLE_ROUTES)],\n    exports: [RouterModule]\n})\n\nexport class SampleRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SampleService.html":{"url":"injectables/SampleService.html","title":"injectable - SampleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SampleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/sample/services/sample-services/sample.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataTableParams\n                            \n                            \n                                queryParam\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareQueryParam\n                            \n                            \n                                sampleDelete\n                            \n                            \n                                sampleGet\n                            \n                            \n                                samplePost\n                            \n                            \n                                samplePut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, storageService: LocalStorageService, router: Router, errorService: ErrorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sample/services/sample-services/sample.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorService\n                                                  \n                                                        \n                                                                        ErrorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        prepareQueryParam\n                        \n                    \n                \n            \n            \n                \nprepareQueryParam(paramObject: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/services/sample-services/sample.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paramObject\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleDelete\n                        \n                    \n                \n            \n            \n                \nsampleDelete(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/services/sample-services/sample.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sampleGet\n                        \n                    \n                \n            \n            \n                \nsampleGet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/services/sample-services/sample.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samplePost\n                        \n                    \n                \n            \n            \n                \nsamplePost(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/services/sample-services/sample.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        samplePut\n                        \n                    \n                \n            \n            \n                \nsamplePut(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sample/services/sample-services/sample.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataTableParams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    offset: 0,\n    size: 10,\n    sortField: 'NAME',\n    sortOrder: 1,\n    searchText: null\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sample/services/sample-services/sample.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryParam\n                        \n                    \n                \n            \n                \n                    \n                        Type :     URLSearchParams | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sample/services/sample-services/sample.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiMethodName } from 'src/app/core/constants/ApiMethodName';\nimport { ErrorService } from 'src/app/core/services/error/error.service';\nimport { HttpService } from 'src/app/core/services/http-services/http.service';\nimport { LocalStorageService } from 'src/app/core/services/localstorage-service/localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SampleService {\n\n  dataTableParams = {\n    offset: 0,\n    size: 10,\n    sortField: 'NAME',\n    sortOrder: 1,\n    searchText: null\n  };\n\n  queryParam: URLSearchParams | undefined;\n\n  constructor(\n    private httpService: HttpService,\n    private storageService: LocalStorageService,\n    private router: Router,\n    private errorService: ErrorService\n  ) { }\n\n  prepareQueryParam(paramObject: any) {\n    const params = new URLSearchParams();\n    // tslint:disable-next-line: forin\n    for (const key in paramObject) {\n      params.set(key, paramObject[key]);\n    }\n    return params;\n  }\n\n  sampleGet(): any {\n    this.queryParam = this.prepareQueryParam(this.dataTableParams);\n    const url = 'region' + '?' + this.queryParam;\n    return this.httpService.requestCall(url, ApiMethodName.GET);\n  }\n\n  samplePost(data: any): any {\n    const url = 'region';\n    return this.httpService.requestCall(url, ApiMethodName.POST, data);\n  }\n\n  samplePut(data: any): any {\n    const url = 'region';\n    return this.httpService.requestCall(url, ApiMethodName.PUT, data);\n  }\n\n  sampleDelete(data: any): any {\n    const url = 'region';\n    return this.httpService.requestCall(url, ApiMethodName.DELETE, data);\n  }\n\n  // sampleGet(dataTableParam: URLSearchParams): Observable {\n  //   const url = environment.apiEndPoint + 'region' + '?' + dataTableParam;\n  //   return this.httpService.get(url);\n  // }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/components/signup/signup.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup\n            \n\n            \n                styleUrls\n                ./signup.component.css\n            \n\n\n\n            \n                templateUrl\n                ./signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/components/signup/signup.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/signup/signup.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        signup works!\n\n    \n\n    \n                \n                    ./signup.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'signup works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'DemoComponent', 'selector': 'app-demo'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'SampleComponent', 'selector': 'app-sample'},{'name': 'SignupComponent', 'selector': 'app-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationResult.html":{"url":"interfaces/ValidationResult.html","title":"interface - ValidationResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/util/ValidationResult.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/util/ValidationResult.ts:2\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface ValidationResult {\n    [key: string]: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/constants/ApiConstants.ts\n            \n            variable\n            API_CONSTANTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/constants/CommonConstants.ts\n            \n            variable\n            COMMON_CONSTANTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/constants/PathConstants.ts\n            \n            variable\n            PATH_CONSTANTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/constants/RegxConstant.ts\n            \n            variable\n            REGX_CONSTANT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/gaurds/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/error/error.service.ts\n            \n            injectable\n            ErrorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/http-services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/interceptor/httpInterceptor.ts\n            \n            interceptor\n            httpInterceptor\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/loadash/loadash.service.ts\n            \n            injectable\n            LoadashService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/localstorage-service/locale-change.service.ts\n            \n            injectable\n            LocaleChangeService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/localstorage-service/localstorage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/notification/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/util/CommonUtil.ts\n            \n            class\n            CommonUtil\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/util/CustomValidator.ts\n            \n            class\n            CustomValidator\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/util/ValidationResult.ts\n            \n            interface\n            ValidationResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/auth/components/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/auth/services/auth-services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/sample/components/demo/demo.component.ts\n            \n            component\n            DemoComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/modules/sample/sample.component.ts\n            \n            component\n            SampleComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/sample/services/sample-services/sample.service.ts\n            \n            injectable\n            SampleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            bootstrap : ^5.1.3\n        \n            jquery : ^3.6.0\n        \n            ngx-spinner : ^12.0.0\n        \n            ngx-toastr : ^14.1.3\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiMethodName   (src/.../ApiMethodName.ts)\n                        \n                        \n                            ClientErrorCodes   (src/.../error.service.ts)\n                        \n                        \n                            Codesss   (src/.../error.service.ts)\n                        \n                        \n                            RedirectionCodes   (src/.../error.service.ts)\n                        \n                        \n                            ServerErrorCodes   (src/.../error.service.ts)\n                        \n                        \n                            SuccessCodes   (src/.../error.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/constants/ApiMethodName.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiMethodName\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 MODIFY\n                            \n                        \n                        \n                            \n                                Value : MODIFY\n                            \n                        \n            \n        \n\n    src/app/core/services/error/error.service.ts\n    \n        \n            \n                \n                    \n                        \n                        ClientErrorCodes\n                    \n                \n                        \n                            \n                                 SERVER_SHUTDOWN\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : 400\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : 401\n                            \n                        \n                        \n                            \n                                 PAYMENT_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 402\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : 403\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : 404\n                            \n                        \n                        \n                            \n                                 METHOD_NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : 405\n                            \n                        \n                        \n                            \n                                 NOT_ACCEPTABLE\n                            \n                        \n                        \n                            \n                                Value : 406\n                            \n                        \n                        \n                            \n                                 PROXY_AUTHENTICATION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 407\n                            \n                        \n                        \n                            \n                                 REQUEST_TIME_OUT\n                            \n                        \n                        \n                            \n                                Value : 408\n                            \n                        \n                        \n                            \n                                 CONFLICT\n                            \n                        \n                        \n                            \n                                Value : 409\n                            \n                        \n                        \n                            \n                                 GONE\n                            \n                        \n                        \n                            \n                                Value : 410\n                            \n                        \n                        \n                            \n                                 LENGTH_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : 411\n                            \n                        \n                        \n                            \n                                 PRECONDITION_FAILED\n                            \n                        \n                        \n                            \n                                Value : 412\n                            \n                        \n                        \n                            \n                                 REQUEST_ENTITY_TOO_LARGE\n                            \n                        \n                        \n                            \n                                Value : 413\n                            \n                        \n                        \n                            \n                                 REQUEST_URL_TOO_LARGE\n                            \n                        \n                        \n                            \n                                Value : 414\n                            \n                        \n                        \n                            \n                                 UNSUPPORTED_MEDIA_TYPE\n                            \n                        \n                        \n                            \n                                Value : 415\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Codesss\n                    \n                \n                        \n                            \n                                 COUNTINUE\n                            \n                        \n                        \n                            \n                                Value : 100\n                            \n                        \n                        \n                            \n                                 SWITCHING_PROTOCOL\n                            \n                        \n                        \n                            \n                                Value : 101\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RedirectionCodes\n                    \n                \n                        \n                            \n                                 MULTIPLE_CHOICE\n                            \n                        \n                        \n                            \n                                Value : 300\n                            \n                        \n                        \n                            \n                                 MOVED_PERMANANTLY\n                            \n                        \n                        \n                            \n                                Value : 301\n                            \n                        \n                        \n                            \n                                 MOVED_TEMPORARY\n                            \n                        \n                        \n                            \n                                Value : 302\n                            \n                        \n                        \n                            \n                                 SEE_OTHER\n                            \n                        \n                        \n                            \n                                Value : 303\n                            \n                        \n                        \n                            \n                                 NOT_MODIFIED\n                            \n                        \n                        \n                            \n                                Value : 304\n                            \n                        \n                        \n                            \n                                 USE_PROXY\n                            \n                        \n                        \n                            \n                                Value : 305\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ServerErrorCodes\n                    \n                \n                        \n                            \n                                 SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : 500\n                            \n                        \n                        \n                            \n                                 NOT_IMPLEMENTED\n                            \n                        \n                        \n                            \n                                Value : 501\n                            \n                        \n                        \n                            \n                                 BAD_GATEWAY\n                            \n                        \n                        \n                            \n                                Value : 502\n                            \n                        \n                        \n                            \n                                 OUT_OF_RESOURCES\n                            \n                        \n                        \n                            \n                                Value : 503\n                            \n                        \n                        \n                            \n                                 GATEWAY_TIME_OUT\n                            \n                        \n                        \n                            \n                                Value : 504\n                            \n                        \n                        \n                            \n                                 HTTP_VERSION_NOT_SUPPORTED\n                            \n                        \n                        \n                            \n                                Value : 505\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SuccessCodes\n                    \n                \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : 201\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : 202\n                            \n                        \n                        \n                            \n                                 PARTIAL_INFORMATION\n                            \n                        \n                        \n                            \n                                Value : 203\n                            \n                        \n                        \n                            \n                                 NO_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 204\n                            \n                        \n                        \n                            \n                                 RESET_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 205\n                            \n                        \n                        \n                            \n                                 PARTIAL_CONTENT\n                            \n                        \n                        \n                            \n                                Value : 206\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/httpInterceptor.html":{"url":"interceptors/httpInterceptor.html","title":"interceptor - httpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  httpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interceptor/httpInterceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                endPoint\n                            \n                            \n                                requestList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                regexForFilterData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spinner: NgxSpinnerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/interceptor/httpInterceptor.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/interceptor/httpInterceptor.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        regexForFilterData\n                        \n                    \n                \n            \n            \n                \nregexForFilterData(urlString: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/interceptor/httpInterceptor.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urlString\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/interceptor/httpInterceptor.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endPoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : environment.apiEndPoint\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/interceptor/httpInterceptor.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n        // environment.apiEndPoint+'user/signUp',\n        environment.apiEndPoint + 'oauth/token'\n    ]\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/interceptor/httpInterceptor.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n    HttpEvent, HttpHandler, HttpInterceptor,\n    HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Observable } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\n// tslint:disable-next-line: class-name\nexport class httpInterceptor implements HttpInterceptor {\n\n    count = 0;\n    endPoint: any = environment.apiEndPoint;\n    requestList = [\n        // environment.apiEndPoint+'user/signUp',\n        environment.apiEndPoint + 'oauth/token'\n    ];\n    constructor(\n        private spinner: NgxSpinnerService,\n        private router: Router) { }\n\n    intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        if (this.regexForFilterData(req.url) || this.requestList.includes(req.url)) {\n            return next.handle(req);\n        } else {\n            this.spinner.show();\n            this.count++;\n            return next.handle(req)\n                .pipe(tap(\n                    event => console.log(event),\n                    error => console.log(error)\n                ), finalize(() => {\n                    this.count--;\n                    if (this.router.url === '/') {\n                        if (this.count === 0) {\n                            setTimeout(() => {\n                                if (this) {\n                                    this.spinner.hide();\n                                }\n                            }, 0);\n                        }\n                    } else {\n                        if (this.count === 0) {\n                            setTimeout(() => {\n                                if (this) {\n                                    this.spinner.hide();\n                                }\n                            }, 1000);\n                        }\n                    }\n                })\n                );\n        }\n    }\n\n    regexForFilterData(urlString: any): boolean {\n        if (urlString.indexOf('/filterData') > -1 || urlString.indexOf('unreadCount/') > -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDemoStructureVersionTwelve\nThis project was generated with Angular CLI version 12.2.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SampleRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_SampleModule\n\n\n\ncluster_SampleModule_declarations\n\n\n\ncluster_SampleModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHttpService\n\nHttpService\n\nAppModule -->\n\nHttpService->AppModule\n\n\n\n\n\nLocalStorageService\n\nLocalStorageService\n\nAppModule -->\n\nLocalStorageService->AppModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nAppModule -->\n\nNotificationService->AppModule\n\n\n\n\n\nhttpInterceptor\n\nhttpInterceptor\n\nAppModule -->\n\nhttpInterceptor->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorComponent->ErrorModule\n\n\n\n\n\nErrorRoutingModule\n\nErrorRoutingModule\n\nErrorModule -->\n\nErrorRoutingModule->ErrorModule\n\n\n\n\n\nDemoComponent\n\nDemoComponent\n\n\n\nSampleModule\n\nSampleModule\n\nSampleModule -->\n\nDemoComponent->SampleModule\n\n\n\n\n\nSampleComponent\n\nSampleComponent\n\nSampleModule -->\n\nSampleComponent->SampleModule\n\n\n\n\n\nSampleRoutingModule\n\nSampleRoutingModule\n\nSampleModule -->\n\nSampleRoutingModule->SampleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        17 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_CONSTANTS   (src/.../ApiConstants.ts)\n                        \n                        \n                            COMMON_CONSTANTS   (src/.../CommonConstants.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PATH_CONSTANTS   (src/.../PathConstants.ts)\n                        \n                        \n                            REGX_CONSTANT   (src/.../RegxConstant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/constants/ApiConstants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\n    // Sample file path\n    SAMPLE_FILE_PATH: 'assets/sample file/',\n\n    // Test\n    TEST_API_GET: CommonUtil.getApiEndPointPath() + 'test/testGet',\n    TEST_API_POST: CommonUtil.getApiEndPointPath() + 'test/testPost',\n    TOKEN_API: CommonUtil.getApiEndPointPath() + 'oauth/token',\n\n    // Content\n    CONTENT_SAVE: CommonUtil.getApiEndPointPath() + 'content',\n    GET_CONTENT_BY_TYPE: CommonUtil.getApiEndPointPath() + 'content/contentType?type=',\n    CONTENT_UPDATE: CommonUtil.getApiEndPointPath() + 'content',\n\n    // Sample\n    SAMPLE_GET: CommonUtil.getApiEndPointPath() + 'test/testGet',\n    SAMPLE_POST: CommonUtil.getApiEndPointPath() + 'test/testPost',\n\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/constants/CommonConstants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        COMMON_CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    PASSWORD_REGX : '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=.*-/\\\\\\\\;!])(?=\\\\S+$).{8,}$',\n    EMAIL_REGEX: \"^[_A-Za-z0-9-+]+(.[_A-Za-z0-9-]+)*@\" + \"[A-Za-z0-9-]+(.[A-Za-z0-9]+)*(.[A-Za-z]{2,})$\",\n    CLIENT_EMAIL_REGEX: \"/^([\\w-\\.]+@(?!gmail.com)(?!yahoo.com)(?!aol.com)(?!outlook.com)(?!zoho.com)(?!mail.com)(?!protonmail.com)(?!icloud.com)(?!gmx.com)(?!yandex.com)(?!hubspot.com)(?!hotmail.com)([\\w-]+\\.)+[\\w-]{2,4})?$/\",\n    MASTER_TABLE_ROW_SIZE: 10,\n    MASTER_TABLE_PAGINATE_DROPDOWN:[10,20,30],\n    EIN_REGX : '^((?!11-1111111)(?!22-2222222)(?!33-3333333)(?!44-4444444)(?!55-5555555)(?!66-6666666)(?!77-7777777)(?!88-8888888)(?!99-9999999)(?!12-3456789)(?!00-[0-9]{7})([0-9]{2}-[0-9]{7}))*$',\n    SSN_REGX : '^((?!111-11-1111)(?!222-22-2222)(?!333-33-3333)(?!444-44-4444)(?!555-55-5555)(?!666-66-6666)(?!777-77-7777)(?!888-88-8888)(?!999-99-9999)(?!123-45-6789)(?!000-[0-9]{2}-[0-9]{4})([0-9]{3}-[0-9]{2}-[0-9]{4}))*$',\n    MOBILE_PHONE: '^((\\+){1}91){1}[1-9]{1}[0-9]{9}$',\n    TRUNCATE_LENGTH : '30',\n    WEBSITE_URL:'^(http[s]?://)?([^.:/@#]+)(\\\\.[^.:/@#]+)+$',\n    // WEBSITE_URL:' /^(http[s]?://){0,1}(www.){0,1}[a-zA-Z0-9.-]+.[a-zA-Z]{2,5}[.]{0,1}/'\n    // WEBSITE_URL:'(https?://)?(http?://)?(ftp?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?'\n    // WEBSITE_URL:'/^[A-Za-z][A-Za-z\\d.+-]*:\\/*(?:\\w+(?::\\w+)?@)?[^\\s/]+(?::\\d+)?(?:\\/[\\w#!:.?+=&%@\\-/]*)?$/'\n\n    COMMON_PASSWORD_FOR_ADMIN_ADD_FUNCTIONALITY: 'jKii@3456',\n    blockSpecial: /^[^<>*!&^@#$%()_{}'\":;?~`.,<>=+[\\]]+$/,\n    blockSpecialForExperience: /^[A-Z@~`!@#$%^&*()_=+\\\\\\\\';:\\\"\\\\/?>.\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n\n  // Local Host URL\n  apiEndPoint: 'http://localhost:8090/',\n  baseURL: 'http://localhost:8090',\n\n\n  bellNotificationInterval: 2000 * 60,\n  autoLogout: 7200000, // 2 hours\n  autoLogoutimmediate: 43200000, // 12 hours\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/constants/PathConstants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PATH_CONSTANTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    HOME: '/home',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/constants/RegxConstant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REGX_CONSTANT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    PASSWORD_REGX : '^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=.*-/\\\\\\\\;!])(?=\\\\S+$).{8,}$',\n    EIN_REGX : '/[0-9]{2}-[0-9]{7}$/',\n    SSN_REGX : '/[0-9]{3}-[0-9]{2}-[0-9]{4}$/'\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
